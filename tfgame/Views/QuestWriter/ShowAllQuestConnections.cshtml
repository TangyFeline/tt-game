
@model IEnumerable<tfgame.dbModels.Models.QuestConnection>



<h1>Quest Connections</h1>

@{
    <table>
        @foreach (tfgame.dbModels.Models.QuestConnection q in Model.ToList())
        {

            // int Id, int QuestId, int FromQuestId, int ToQuestId

            <tr>
                <td>
                    @Ajax.ActionLink(q.ConnectionName, "QuestConnection", "QuestWriter", new { Id = q.Id, QuestId = q.QuestId, FromQuestId = q.QuestStateFromId, ToQuestId = q.QuestStateToId }, new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "editButton" })


                        @if (q.QuestConnectionRequirements.Count() > 0)
                        {
                            <span>@q.QuestConnectionRequirements.Count() requirements |</span>
                        }
                   
                </td>
                <td>
                    @{ 
                        if (q.QuestStateFromId > 0)
                        {
                            @Ajax.ActionLink("Jump to FROM State", "QuestState", "QuestWriter", new { Id = q.QuestStateFromId, QuestId = q.QuestId, ParentStateId = -1 }, new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "editButton" })
                        }
                        else
                        {
                            <span class="bad">No FROM quest state set</span>
                        }
                    }
                </td>

                <td>
                    @{
                        if (q.QuestStateToId > 0)
                        {
                            @Ajax.ActionLink("Jump to TO State", "QuestState", "QuestWriter", new { Id = q.QuestStateToId, QuestId = q.QuestId, ParentStateId = -1 }, new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "editButton" })
                        }
                        else
                        {
                            <span class="bad">No TO quest state set</span>
                        }
                    }
                </td>

                <td>
                    @Ajax.ActionLink("[DELETE]", "QuestConnectionDelete", "QuestWriter", new { Id = q.Id }, new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting", Confirm = "Are you sure you want to delete this quest connection?" }, new { @class = "deleteButton" })
                </td>

            </tr>
                        }
    </table>


}

<p>@Ajax.ActionLink("Add New", "QuestConnection", "QuestWriter", new { Id = -1, QuestId = Model.First().QuestId, FromQuestId = -1, ToQuestId = -1 }, new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "newButton" })</p>
