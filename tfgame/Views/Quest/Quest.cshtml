@model tfgame.ViewModels.Quest.QuestPlayPageViewModel
    @using tfgame.dbModels.Models
@using tfgame.CustomHtmlHelpers

<h1>Quest:  <b>@Model.QuestStart.Name</b></h1>

<div id="playerBox">
    <h3>@Model.Player.Player.GetFullName()</h3>
    <div class="portrait" style="background-image: url(@CharactersHere.GetImageURL(Model.Player, true));">

        <span class="icon icon-@Model.Player.Player.Gender" style="float:right;"></span>
        <span class="icon icon-level"><b>@Model.Player.Player.Level</b></span>
        <span class="portraitIconRP">@CharactersHere.PrintRPIcon(Model.Player.Player.ToDbPlayer()) @CharactersHere.PrintPvPIcon(Model.Player.Player.ToDbPlayer()) @CharactersHere.PrintMCIcon(Model.Player.Player.ToDbPlayer()) @CharactersHere.PrintDonatorIcon(Model.Player.Player.ToDbPlayer())</span>
        @{
            if (tfgame.Procedures.PlayerProcedures.PlayerIsOffline(Model.Player.Player) == true)
            {
                <span class="icon icon-sleep" title="This player is offline and cannot be attacked."></span>
            }
        }
    </div>
</div>

<hr />

<div id="textBody">
    @Model.QuestState.Text
</div>

<hr />

@foreach (QuestState child in Model.ChildQuestStates)
{
    <p> @Ajax.ActionLink(child.ChoiceText, "Choice", "Quest", new { Id = child.Id }, new AjaxOptions { UpdateTargetId = "quest", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "" })</p>
}