@model tfgame.dbModels.Models.Player
           @using tfgame.Statics

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div class="containerInner center-block">
    <h2>Offline Timer</h2>
    @{
        if (@ViewBag.TimeUntilLogout >= 60)
        {
            <p>Your character is offline.</p>
        }
        else if (@ViewBag.TimeUntilLogout > 0)
        {
            <p>You will go into offline mode in <b>@ViewBag.TimeUntilLogout</b> minutes.</p>
        }
        else
        {
            <p><span class="good">You are offline.</span></p>
        }
        
        <p>You were last in combat <b>@Math.Abs(Math.Floor(Model.GetLastCombatTimestamp().Subtract(DateTime.UtcNow).TotalMinutes))</b> minutes ago.</p>

        if (@ViewBag.Mobility != "full")
        {
            if (@ViewBag.TimeUntilReroll > 0)
            {
                <p>You can restart your character in <b>@ViewBag.TimeUntilReroll</b> minutes.</p>
            }
            else
            {
                <p>You can restart your character <b>now</b>.</p>
            }
        }


        if (User.IsInRole(PvPStatics.Permissions_MultiAccountWhitelist) == true)
        {
            <p class="good">You are on the multiple account whitelist.</p>
        }
        
         if (User.IsInRole(PvPStatics.Permissions_Moderator) == true)
        {
            <p class="good">You are on the chat moderators list.</p>
        }
        
        if (User.IsInRole(PvPStatics.Permissions_Proofreader) == true)
        {
            <p class="good">You are on the proofreaders list.</p>
        }

        if (User.IsInRole(PvPStatics.Permissions_Publisher) == true)
        {
            <p class="good">You are on the publishers list.</p>
        }

        if (User.IsInRole(PvPStatics.Permissions_Previewer) == true)
        {
            <p class="good">You are on the contribution previewer list.  @Html.ActionLink("Preview Contributions", "ApproveContributionList", "PvPAdmin")<br /></p>
        }
        
        if (User.IsInRole(PvPStatics.Permissions_Artist) == true)
        {
            <p class="good">You are on the artists list.  @Html.ActionLink("Update your Artist Biography", "WriteAuthorArtistBio", "Settings")</p>
        }

        if (User.IsInRole(PvPStatics.Permissions_Killswitcher) == true)
        {
            <p class="good">You are on the update killswitch list.   <span class="bad">Activate this link when and ONLY when you and a number of animate players are receiving error screens and are unable to play.  Clicking this link will temporarily disable turn updates so bots do not attacker players who are incapable of responding.  @Html.ActionLink("CLICK HERE TO ACTIVATE.", "Killswitch", "PvPAdmin")</span></p>
        }
        
       
        
    }

    <h2>View Statistics</h2>

    <p>@Html.ActionLink("View your statistics for this round", "PlayerStats", "Settings", new { id = Model.MembershipId }, null)</p>

    <h2>Reserve this Name</h2>
    <p>
        You can reserve your name so that no other players take it at the start of a new round and steal your identity.
        You must be level 3 or higher in order to do this.<br /><br />
        @Html.ActionLink("Reserve Name", "ReserveName", "PvP")<br />
        @Html.ActionLink("Use my custom starting form (if available)", "UseMyCustomForm", "Settings")
    </p>


    <h2>Update Your Biography</h2>

    <p>
        You can write a short bio of yourself or this player here.  You can also select RP tags which will indicate to others what your roleplaying theme intersts include or exclude.<br /><br />
        @Html.ActionLink("Update My Bio", "SetBio", "Settings")
    </p>


    <h2>RP Mode</h2>

    <p>
        If you choose to enter RP mode, you are publicly indicated to other players that you enjoy roleplaying.
        You can enable and disable this at any time you want.  Click on the link below to enter RP mode.<br /><br />
        @{
            if (Model.InRP == true)
            {
                <span class="good">You have your RP flag enabled.  Click @Html.ActionLink("HERE", "DisableRP", "Settings") to turn it off.</span>
            }
            else
            {
                <span class="bad">You have your RP flag disabled.  Click @Html.ActionLink("HERE", "EnableRP", "Settings") to turn it on.</span>
            }

        }
    </p>


    <h2>Protection Mode</h2>

    <p>
        There are three game modes:  1) Superprotection disables ALL spells from being cast against you by others players.  2) Protection.  Being in protection mode disallows other players from casting inanimate, pet, and mind control spells against you.  3) PvP mode enables all spells to be cast against you in a competative manner by other PvP players.  Friends and AI players (psychopathic spellslingers and bosses) are exempt from these rules.  Additionally, being someone's friend enables them to cast any spell against you they choose regardless of which game mode either of you are in.  <span class="bad">As of Alpha Round 19 you can no longer freely move between Protection and PvP game modes.</span><br />

        @{
            if (Model.GameMode == 1)
            {
                @Html.ActionLink("Enter SuperProtection Mode", "EnterSuperProtection", "Settings")<br />
                @*@Html.ActionLink("Enter PvP Mode", "LeaveProtection", "Settings")*@
            }
            else if (Model.GameMode == 2)
            {
                @*@Html.ActionLink("Enter Protection Mode", "EnterProtection", "Settings")*@
            }
            else if (Model.GameMode == 0)
            {
                @Html.ActionLink("Leave SuperProtection Mode", "LeaveSuperProtection", "Settings")
            }
        }
    </p>
    @{

        if (ViewBag.GameMode == 0 || ViewBag.GameMode == 1)
        {
            <h2>Lower your WP (Protection Mode only)</h2>

            <p>
                You can voluntarily submit to the magic of a friend (or enemy?) more quickly by voluntarily lowering your willpower to make yourself more vulnerable to attacks.<br /><br />

                @Html.ActionLink("Decrease Willpower to Half", "DumpWillpower", "Settings", new { amount = "half" }, null)<br /><br />
                @Html.ActionLink("Decrease Willpower to Zero", "DumpWillpower", "Settings", new { amount = "full" }, null)
            </p>

        }

    }

    <h2>Change your Chat Color</h2>

    <p>You can change the color that your name appears in the game's chats below.<br /><br />
        <b>
            <span style="color:black;">[] @Html.ActionLink("Black", "SetChatColor", "Settings", new { color = "black" }, null)</span>
            <span style="color:blueviolet !important;">[] @Html.ActionLink("Blue Violet", "SetChatColor", "Settings", new { color = "blueviolet" }, null)</span>
            <span style="color:cadetblue;">[] @Html.ActionLink("Cadet Blue", "SetChatColor", "Settings", new { color = "cadetblue" }, null)</span>
            <span style="color:darkcyan;">[] @Html.ActionLink("Dark Cyan", "SetChatColor", "Settings", new { color = "darkcyan" }, null)</span>
            <span style="color:darkolivegreen;">[] @Html.ActionLink("Dark Olive Green", "SetChatColor", "Settings", new { color = "darkolivegreen" }, null)</span><br />
            <span style="color:#A1770F;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#A1770F" }, null)</span>
            <span style="color:green;">[] @Html.ActionLink("Green", "SetChatColor", "Settings", new { color = "green" }, null)</span>
            <span style="color:indigo;">[] @Html.ActionLink("Indigo", "SetChatColor", "Settings", new { color = "indigo" }, null)</span>
            <span style="color:lightcoral;">[] @Html.ActionLink("Light Coral", "SetChatColor", "Settings", new { color = "lightcoral" }, null)</span>
            <span style="color:mediumpurple;">[] @Html.ActionLink("Medium Purple", "SetChatColor", "Settings", new { color = "mediumpurple" }, null)</span>
            <span style="color:#C98300;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#C98300" }, null)</span>
            <span style="color:#747474;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#747474" }, null)</span>
            <span style="color:#5B67C5;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#5B67C5" }, null)</span>
            <span style="color:#8B5DA2;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#8B5DA2" }, null)</span>
            <span style="color:#DE45DC;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#DE45DC" }, null)</span>
            <span style="color:#249B6C;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#249B6C" }, null)</span>
            <span style="color:#337158;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#337158" }, null)</span>
            <span style="color:#716E33;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#716E33" }, null)</span>
            <span style="color:#986AAA;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#986AAA" }, null)</span>
            <span style="color:#87249B;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#87249B" }, null)</span>
            <span style="color:#4D5277;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#4D5277" }, null)</span>
            <span style="color:#5F8DBA;">[] @Html.ActionLink("COLOR", "SetChatColor", "Settings", new { color = "#5F8DBA" }, null)</span>
        </b>
    </p>

    <h2>Set your Nickname (Donation Feature)</h2>
    <p>
        Players who pledge $7 monthly on Patreon (Tier 2) may create a nickname and change it at any time.  Nicknames must be 20 characters or fewer and will appear inbetween your player's first and last names.<br /><br />

        @Html.ActionLink("Set your nickname", "SetNickname", "Settings")<br /><br />
        @Html.ActionLink("Verify my donation status", "VerifyDonatorStatus", "Settings")
    </p>
    
    <h2>Player Blacklist</h2>
    <p>
        View and update any blacklist entries you have set.  @Html.ActionLink("My Blacklist Entries", "MyBlacklistEntries", "Settings")
    </p>

    <h2>Audio Notifications</h2>
    <p id="toggleAudio"><a>Click here to toggle audio notifications.</a>  This will play a short sounds when a turn updates and when you are attacked or messaged.  (This does not work across all browers, particularly mobile OSes.)</p>

    <h2>Chrome/Firefox push Notifications</h2>
    <p id="togglePush"><a>Click here to toggle Chrome/Firefox push notifications.</a>  If you enable these, you will recieve HTML5 Notifications which will create small popups on your screen when you receieve a notice, even if the browsers is minimized.  You must also grant this site permission to send notifications; your browser should prompt you for permission the first time it tries to send one.</p>

</div>

<script>
    $(document).ready(function () {

        $("#toggleAudio").click(function () {
            var toggle = localStorage.getItem("play_updateSoundEnabled");

            if (toggle == undefined || toggle == "false") {
                var toggle = localStorage.setItem("play_updateSoundEnabled", "true");
                alert("Update audio notifications ENABLED.");
            } else {
                var toggle = localStorage.setItem("play_updateSoundEnabled", "false");
                alert("Update audio notifications DISABLED.");
            }

        });


        $("#togglePush").click(function () {
            var toggle = localStorage.getItem("play_html5PushEnabled");

            if (toggle == undefined || toggle == "false") {
                var toggle = localStorage.setItem("play_html5PushEnabled", "true");
                alert("HTML Notifications ENABLED.");
            } else {
                var toggle = localStorage.setItem("play_html5PushEnabled", "false");
                alert("HTML Notifications DISABLED");
            }

        });

    });
</script>


<style>
    p {
        border: 1px solid;
        height: auto;
        width: 75%;
        margin-left: auto;
        margin-right: auto;
        padding: 5px;
        overflow: auto;
    }
</style>