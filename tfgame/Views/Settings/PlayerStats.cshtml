@using tfgame.Procedures
@using tfgame.dbModels.Models

@model IEnumerable<Achievement>

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
               <li>@Html.ActionLink("Look at Player", "LookAtPlayer", "PvP", new { id = ViewBag.PlayerId }, null)</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>



<div class="containerInner">
    <h1>@ViewBag.Name's Statistics</h1>

    <p>Times searched:  @Model.Where(a => a.AchievementType == StatsProcedures.Stat__SearchCount).Sum(x => x.Amount)</p>
    <p>Spells cast:  @Model.Where(a => a.AchievementType == StatsProcedures.Stat__SpellsCast).Sum(x => x.Amount)</p>
    <p>Enchantments cast:  @Model.Where(a => a.AchievementType == StatsProcedures.Stat__TimesEnchanted).Sum(x => x.Amount)</p>
    <p>Times meditated:  @Model.Where(a => a.AchievementType == StatsProcedures.Stat__TimesMeditated).Sum(x => x.Amount)</p>
    <p>Times cleansed:  @Model.Where(a => a.AchievementType == StatsProcedures.Stat__TimesCleansed).Sum(x => x.Amount)</p>

</div>