@model tfgame.dbModels.Models.PlayerBio
@using tfgame.CustomHtmlHelpers
@using tfgame.ViewModels

<head>
    <link href="~/Content/PvP.css" rel="stylesheet" />
</head>

<p>@Html.ActionLink("Back to game", "Play", "PvP")</p>

<h1>Player Bio for @ViewBag.Name</h1>

@{
    if (Model.WebsiteURL != "")
    {
        <h3>Website</h3>

        @*<p>@CharactersHere.StringToWebsite(Model.WebsiteURL)</p>*@

        <p>@Model.WebsiteURL</p>
    }
}


<h3>Bio</h3>

@{
    if (Model.Text != null && Model.Text != "")
    {
        <p>@Html.Raw(Model.Text.Replace("[br]","<br/>"))</p>
    }
}


<h3>RP Tags</h3>

@Html.HiddenFor(m => m.Tags)

@Html.Partial("partial/rptags");

<p class="timeago">Last updated @Model.Timestamp</p>

@{
    if (ViewBag.MyContributions.Count > 0)
    {
        foreach (BioPageContributionViewModel s in ViewBag.MyContributions)
        {
            <p>Author of the <b>@s.SpellName</b> spell which transforms its victim into the <b>@s.FormName</b> form.</p>
        }
    }

    if (ViewBag.MyEffectContributions.Count > 0)
    {
        foreach (BioPageEffectContributionViewModel s in ViewBag.MyEffectContributions)
        {
            if (s.SpellName != null && s.EffectName != "")
            {
                <p>Author of the <b>@s.EffectName</b> effect cast which is gained by being struck with the <b>@s.SpellName</b> spell.</p>
            }
            else
            {
                <p>Author of the <b>@s.EffectName</b> effect.</p>
            }
        
        }
    }
    
}


<p>@Html.ActionLink("Back to game", "Play", "PvP")</p>

<script>


    $(document).ready(function () {

        var tagstring = $("#Tags").val();
        console.log("Raw string:  " + tagstring);

        // assign the proper styling onload
        $(".rpTag").each(function () {

            var code = $(this).attr("tagcode");
            var regexs = code + ".[0-9];";
            var regex = new RegExp(regexs, "i")
            var smatch = tagstring.match(regex);

            // currently exists; increment its state
            if (smatch !== null) {
                console.log("Match found:  " + smatch);
                var numberValue = smatch[0].match(/[0-9]/);
                console.log("Value of match:  " + numberValue);

                if (numberValue == 0) {
                    $(this).addClass("neg2");
                } else if (numberValue == 1) {
                    $(this).addClass("neg1");
                } else if (numberValue == 2) {
                    $(this).addClass("pos1");
                } else if (numberValue == 3) {
                    $(this).addClass("pos2");
                }
            }
        });

    });

</script>