@model tfgame.ViewModels.PlayerFormItemsSkillsViewModel
@using tfgame.ViewModels
@using tfgame.Procedures
@using tfgame.CustomHtmlHelpers
@using tfgame.Statics

@Html.ActionLink("Back to game", "Play", "PvP")

<span style="text-align: center;">
@{
    if (Model.PlayerForm.Player.MembershipId != -1)
    {
        <p>
            @{
        if (ViewBag.HasBio)
        {
            @Html.ActionLink("View Bio", "ViewBio", "Settings", new { id = Model.PlayerForm.Player.MembershipId }, null)
        }
            }

            @{
        if (Model.PlayerForm.Player.MembershipId > 0)
        {

            @Html.ActionLink("Send a Message", "Write", "PvP", new { playerId = Model.PlayerForm.Player.Id, responseTo = -1 }, null)@:&nbsp;               
            @Html.ActionLink("Request Friendship", "AddFriend", "PvP", new { playerId = Model.PlayerForm.Player.Id }, null)
                @Html.ActionLink("Toggle blacklist on this player", "ToggleBlacklistOnPlayer", "Settings", new { id = Model.PlayerForm.Player.Id }, null)
        }
        <p>@Html.ActionLink("View Effects", "ViewEffects", "PvP", new { id = Model.PlayerForm.Player.Id }, null)</p>
            }
        </p>
    }
    else
    {
        <p style="color: red;">This player has chosen to create a new character and cannot be messaged or have a friend request sent to them.</p>
    }
}
</span>

<center>
    <div class="leftDisplay" style="background-image: url(../../Images/PvP/portraits/@Model.PlayerForm.Form.PortraitUrl);">
        <span class="icon-level"><b>@Model.PlayerForm.Player.Level</b></span>
        <span class="icon-@Model.PlayerForm.Player.Gender" style="float:right;"></span>
        <span class="iconPortrait">
            @CharactersHere.PrintDonatorIcon(Model.PlayerForm.Player.ToDbPlayer())
            @CharactersHere.PrintRPIcon(Model.PlayerForm.Player.ToDbPlayer())
            @CharactersHere.PrintPvPIcon(Model.PlayerForm.Player.ToDbPlayer())
        </span>
    </div>
    <div class="rightDisplay">
        <h1 style="margin-top: 0px; text-align: center;">@Model.PlayerForm.Player.GetFullName()</h1>
        <center>
            @CharactersHere.GetCovenantInfo(Model.PlayerForm.Player.ToDbPlayer())
            @{
                if (ViewBag.TimeUntilLogout > 0 && Model.PlayerForm.Player.MembershipId > 0)
                {<p class="good">Online for @ViewBag.TimeUntilLogout more minutes</p>}
                else if (Model.PlayerForm.Player.MembershipId > 0)
                {<p class="bad">Offline</p>}
            }
            <span class="health">Willpower:  @Model.PlayerForm.Player.Health / @Model.PlayerForm.Player.MaxHealth</span><br />
            <span class="mana">Mana:  @Model.PlayerForm.Player.Mana / @Model.PlayerForm.Player.MaxMana</span>
            <h3>@Model.PlayerForm.Form.FriendlyName</h3>
        </center>
        <p>@Model.PlayerForm.Form.Description</p>
    </div>
</center>

<div style="clear:both"></div>

@Html.Partial("partial/partial_AllBuffsTable", Model.Bonuses)
@Html.Partial("partial_InventoryEquipped", Model.Items)

@{
    foreach (ItemViewModel item in Model.Items)
    {
        @Html.Partial("partial_InventoryItem", item)
    }
}


@{
    if (Model.Bonuses.SneakPercent() <= PvPStatics.SneakAmountBeforeLocationIsPublic * 3)
    {
        <p class="bad">Due to this player's very poor ability to sneak, you sense that @Model.PlayerForm.Player.FirstName is currently at @ViewBag.AtLocation and has attacked @Model.PlayerForm.Player.TimesAttackingThisUpdate times this update and has @Model.PlayerForm.Player.ActionPoints action points remaining.</p>
    }
    else if (Model.Bonuses.SneakPercent() <= PvPStatics.SneakAmountBeforeLocationIsPublic * 2)
    {
        <p class="bad">Due to this player's very poor ability to sneak, you sense that @Model.PlayerForm.Player.FirstName is currently at @ViewBag.AtLocation and has attacked @Model.PlayerForm.Player.TimesAttackingThisUpdate times this update.</p>
    }
    else if (Model.Bonuses.SneakPercent() <= PvPStatics.SneakAmountBeforeLocationIsPublic)
    {
        <p class="bad">Due to this player's poor ability to sneak, you sense that @Model.PlayerForm.Player.FirstName is currently at @ViewBag.AtLocation.</p>
    }
}

<div style="clear:both"><br /></div>
@Html.ActionLink("Back to game", "Play", "PvP")

@{
    if (User.IsInRole(PvPStatics.Permissions_Moderator) == true)
    {
        if (@Model.PlayerForm.Player.FlaggedForAbuse == false)
        {
            @Html.ActionLink("Lock this player for suspicious activity", "FlagForSuspiciousActivity", "PvP", new { playerId = Model.PlayerForm.Player.Id }, null)
        }
        else
        {
            @Html.ActionLink("Unlock this player for suspicious activity", "FlagForSuspiciousActivity", "PvP", new { playerId = Model.PlayerForm.Player.Id }, null)
        }
        @Html.ActionLink("Reset IP Address", "ResetAllPlayersWithIPAddress", "PvPAdmin", new { address = Model.PlayerForm.Player.IpAddress}, null)
    }
}

<style>
    .leftDisplay {
        background-size: 100% 100%;
        position: relative;
        text-align: left;
        height: 400px;
        width: 400px;
        display: inline-table;
        vertical-align: top;
        margin: 0px;
    }

    .iconPortrait{
        float: right;
        position: relative;
    }

    .rightDisplay {
        padding-left: 10px;
        padding-right: 10px;
        width: 480px;
        display: inline-table;
        vertical-align: top;
        text-align: left;
    }

    .textName {
        font-size: 25px;
        text-align: center;
    }

    .textDescription {
        font-size: 14px;
    }

    .textMobility {
        font-size: 16px;
        font-style: italic;
    }

    .Links {
        display: none;
    }

    .bad{
        margin:0;
        padding:0;
        text-align: center;
    }

    .center{
        margin:0;
        padding:0;
        text-align: center;
    }
    
    .health{
        font-size: 12px;
    }

        .mana{
        font-size: 12px;
    }

    @@media screen and (max-width: 520px) {
        .leftDisplay {
            height: 300px;
            width: 300px;
        }

        .rightDisplay {
            width: 380px;
        }
    }
</style>