@using tfgame.Statics

<head>
    <link href="~/Content/PvP.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-2.1.0.min.js"></script>
</head>

<h1>Item balancing calculator</h1>

<p>Use this calculator to try and balance items.  <b>Good items will only have a total bonus amount of 30--too much and it is likely overpowered and too low and it is likely underpowered.  You can enter negative numbers to impose penalties on that effect instead.</b>  NOTE:  This is very much a work in progress and the exact balancing will change.</p>

<p style="color: red;">Items and Animals should not have more than 4 different effects on them.  Animate forms should not have more than 6 different effects on them.</p>

<p>(Amt):  Means a direct, static amount.  Ex:  30 maxiumum willpower increase adds 30 extra willpower points.</p>

<p>(%):  Means a percentage modifier.  Ex:  a 10% bonus on extra willpower damage per spell attack means 7 damage becomes 7*1.1 = 7.7 damage.</p>

<p>Fields marked with <red>*</red> mean that negative values for these will are only worth half value of their value.  This is because there are generally few to no penalties when these values fall below zero.</p>

<p>What type of spell is this?</p>
<select id="mobilityType">
    <option value="full">Animate Form</option>
    <option value="item">Item</option>
    <option value="pet">Animal/Pet</option>
    <option value="curse">Curse</option>
</select>

<p id="curseDurationWrapper" style="display: none;">
    Turn duration of curse?
    <input type="text" id="curseDurationInput">
</p>


<h2>Net balance:  <span id="total"></span>     Target:  <span id="desired"></span></h2>

<p>
    <button type="button" onclick="Clear()">Clear</button>
</p>

<table id="balanceTable">
    <thead>

    <th>Bonus/Penalty</th>
    <th>Amount</th>
    <th width="80px">Cost / Unit</th>
    <th>Bonus total</th>

    </thead>
    <tbody>
        <tr>
            <td>
                <span class='icon-health_recovery'></span>
                Maximum willpower increase (%)
            </td>
            <td>
                <input type="text" id="HealthBonusPercent"
                       negative_mod="@tfgame.Statics.BalanceStatics.HealthBonusPercent__NegativeModifier"
                       negative_cap="@tfgame.Statics.BalanceStatics.HealthBonusPercent__NegativeCap">
                
            </td>
            <td>@tfgame.Statics.BalanceStatics.HealthBonusPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-mana_recovery'></span>Maximum mana increase (%)</td>
            <td><input type="text" id="ManaBonusPercent"
                    negative_mod="@tfgame.Statics.BalanceStatics.ManaBonusPercent__NegativeModifier"
                    negative_cap="@tfgame.Statics.BalanceStatics.ManaBonusPercent__NegativeCap">
                       </td>
            <td>@tfgame.Statics.BalanceStatics.ManaBonusPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td>
                <span class='icon-health_recovery'></span>Willpower recovery per game update (Amt)</td>
            <td><input type="text" id="HealthRecoveryPerUpdate"></td>
            <td>@tfgame.Statics.BalanceStatics.HealthRecoveryPerUpdate__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-mana_recovery'></span>Mana recovery per game update (Amt)</td>
            <td><input type="text" id="ManaRecoveryPerUpdate"></td>
            <td>@tfgame.Statics.BalanceStatics.ManaRecoveryPerUpdate__Value</td>
            <td></td>
        </tr>
        <tr>
            <td>Sneak chance (%) <red>*</red></td>
            <td>
                <input type="text" id="SneakPercent"
                       negative_mod="@tfgame.Statics.BalanceStatics.SneakPercent__NegativeModifier"
                       negative_cap="@tfgame.Statics.BalanceStatics.SneakPercent__NegativeCap">
            </td>
            <td>@tfgame.Statics.BalanceStatics.SneakPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-defense'></span>Spell evasion (%) <red>*</red></td>
            <td><input type="text" id="EvasionPercent" negative_mod="@tfgame.Statics.BalanceStatics.EvasionPercent__NegativeModifier"></td>
            <td>@tfgame.Statics.BalanceStatics.EvasionPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-timesattacking'></span> evasion NEGATION (%) <red>*</red></td>
            <td><input type="text" id="EvasionNegationPercent" negative_mod="@tfgame.Statics.BalanceStatics.EvasionNegationPercent__NegativeModifier"></td>
            <td>@tfgame.Statics.BalanceStatics.EvasionNegationPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td>
                <span class='icon-cleansemeditate'></span>Extra mana recovered from meditating (Amt)</td>
            <td><input type="text" id="MeditationExtraMana"></td>
            <td>@tfgame.Statics.BalanceStatics.MeditationExtraMana__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-cleansemeditate'></span>Extra willpower recovered from cleansing (Amt)</td>
            <td><input type="text" id="CleanseExtraHealth"></td>
            <td>@tfgame.Statics.BalanceStatics.CleanseExtraHealth__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-timesattacking'></span>Extra spell critical hit chance (%)</td>
            <td><input type="text" id="ExtraSkillCriticalPercent"></td>
            <td>@tfgame.Statics.BalanceStatics.ExtraSkillCriticalPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td>Action point discount when moving (Amt)</td>
            <td><input type="text" id="MoveActionPointDiscount"></td>
            <td>@tfgame.Statics.BalanceStatics.MoveActionPointDiscount__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-timesattacking'></span>Extra transformation energy from spells (%)</td>
            <td><input type="text" id="SpellExtraTFEnergyPercent"></td>
            <td>@tfgame.Statics.BalanceStatics.SpellExtraTFEnergyPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-timesattacking'></span>Extra willpower damage from spells (%)</td>
            <td><input type="text" id="SpellExtraHealthDamagePercent"></td>
            <td>@tfgame.Statics.BalanceStatics.SpellExtraHealthDamagePercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-cleansemeditate'></span>Extra transformation energy removal when cleansing (%)</td>
            <td><input type="text" id="CleanseExtraTFEnergyRemovalPercent"></td>
            <td>@tfgame.Statics.BalanceStatics.CleanseExtraTFEnergyRemovalPercent__Value</td>
            <td></td>
        </tr>
        <tr>
            <td>Misfire chance reduction (%)</td>
            <td><input type="text" id="SpellMisfireChanceReduction"></td>
            <td>@tfgame.Statics.BalanceStatics.SpellMisfireChanceReduction__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-defense'></span>Willpower damage reduction when hit by a spell (%)</td>
            <td><input type="text" id="SpellHealthDamageResistance"></td>
            <td>@tfgame.Statics.BalanceStatics.SpellHealthDamageResistance__Value</td>
            <td></td>
        </tr>
        <tr>
            <td><span class='icon-defense'></span>Transformation energy damage reduction when hit by a spell (%)</td>
            <td><input type="text" id="SpellTFEnergyDamageResistance"></td>
            <td>@tfgame.Statics.BalanceStatics.SpellTFEnergyDamageResistance__Value</td>
            <td></td>
        </tr>
        <tr>
            <td>Extra inventory spaces (Amt)</td>
            <td><input type="text" id="ExtraInventorySpace"></td>
            <td>@tfgame.Statics.BalanceStatics.ExtraInventorySpace__Value</td>
            <td></td>
        </tr>
    </tbody>
</table>

<br />

@*<button type="button" onclick="SetCodeText()">Generate Code</button>*@ 

<br />
@*<p class="bad">Before submitting a contribution, please paste this text into the relevant 'effects' field.  This will help save some time during implementation and testing. </p>*@
@*<textarea rows="4" cols="50" id="textCode">*@
    
</textarea> 



<script>

    var choice = "full";

    $(document).ready(function () {

        recalculateValues();

        $('table input[type=text]').each(function () {
            $(this).blur(function () {

                var cells = $('table tbody td:nth-child(4)');

                //cells.each(function () {



                    // multiply the input by the cost
                    var localcost = $(this).parent().parent().find("td").eq(2).html();
                    var myvalue = $(this).val();
                    var calculated = localcost * myvalue;
                    var calculateCell = $(this).parent().parent().find("td").eq(3);

                    


                    if (calculated != "" && calculated != 0) {

                        // decrease if there's a negative modifier
                        if ($(this).attr("negative_mod") != undefined && calculated < 0) {
                            calculated *= .5;
                        }

                        calculateCell.html(calculated);
                        if (calculated > 0) {
                            calculateCell.removeClass("bad");
                            calculateCell.addClass("good");
                        } else {
                            calculateCell.removeClass("good");
                            calculateCell.addClass("bad");
                        }
                    } else {
                        calculateCell.html("");
                        $(this).removeClass("good");
                        $(this).removeClass("bad");
                    }

               // });

                recalculateValues();
            });
        });

        $("#mobilityType").change(function () {
            choice = $("#mobilityType").val();
       
            if (choice == "full") {
                $("#desired").html("0");
                $("#curseDurationWrapper").hide();
            } else if (choice == "item") {
                $("#desired").html("25");
                $("#curseDurationWrapper").hide();
            } else if (choice == "pet") {
                $("#desired").html("50");
                $("#curseDurationWrapper").hide();
            } else if (choice == "curse") {
                $("#desired").html("-400");
                $("#curseDurationWrapper").show();
            }
        });

        $("#curseDurationInput").focusout(function () {
            recalculateValues();
        });

        // default page load
        $("#desired").html("0");

    });



    function recalculateValues() {
       
        var cells = $('table tbody td:nth-child(4)');
       
        var total = 0;
        var absolute = 0;

        cells.each(function () {
            if ($(this).html() != "") {
                total += parseInt($(this).html());
            }
        });

        if (choice == "curse") {
            total *= $("#curseDurationInput").val();
        }

        $("#total").html(total);
        var totalDesired = parseInt($("#desired").html());

       
        
        if (Math.abs(total-totalDesired) >= 10) {
            $("#total").addClass("bad");
            $("#total").removeClass("good");
        } else {
            $("#total").addClass("good");
            $("#total").removeClass("bad");
        }
 
    }

    //function SetCodeText() {
    //    $("#textCode").val("");
    //    var code = "";

    //    var pre, post;
    //    if ($("#mobilityType").val() == "full") {
    //        pre = "FromForm_";
    //        post = ",\n"
    //    } else {
    //        pre = "";
    //        post = ",\n"
    //    }

    //   if ($("#HealthBonusPercent").val() != "") {
    //       code += pre + "HealthBonusPercent = " + $("#HealthBonusPercent").val() + post;
    //   }
    //   if ($("#ManaBonusPercent").val() != "") {
    //       code += pre + "ManaBonusPercent = " + $("#ManaBonusPercent").val() + post;
    //   }

    //   if ($("#HealthRecoveryPerUpdate").val() != "") {
    //       code += pre + "HealthRecoveryPerUpdate = " + $("#HealthRecoveryPerUpdate").val() + post;
    //   }

    //   if ($("#ManaRecoveryPerUpdate").val() != "") {
    //       code += pre + "ManaRecoveryPerUpdate = " + $("#ManaRecoveryPerUpdate").val() + post;
    //   }

    //   if ($("#SneakPercent").val() != "") {
    //       code += pre + "SneakPercent= " + $("#SneakPercent").val() + post;
    //   }

    //   if ($("#EvasionPercent").val() != "") {
    //       code += pre + "EvasionPercent= " + $("#EvasionPercent").val() + post;
    //   }

    //   if ($("#EvasionNegationPercent").val() != "") {
    //       code += pre + "EvasionNegationPercent= " + $("#EvasionNegationPercent").val() + post;
    //   }

    //   if ($("#MeditationExtraMana").val() != "") {
    //       code += pre + "MeditationExtraMana= " + $("#MeditationExtraMana").val() + post;
    //   }

    //   if ($("#CleanseExtraHealth").val() != "") {
    //       code += pre + "CleanseExtraHealth= " + $("#CleanseExtraHealth").val() + post;
    //   }

    //   if ($("#ExtraSkillCriticalPercent").val() != "") {
    //       code += pre + "ExtraSkillCriticalPercent= " + $("#ExtraSkillCriticalPercent").val() + post;
    //   }

    //   if ($("#MoveActionPointDiscount").val() != "") {
    //       code += pre + "MoveActionPointDiscount= " + $("#MoveActionPointDiscount").val() + post;
    //   }

    //   if ($("#SpellExtraTFEnergyPercent").val() != "") {
    //       code += pre + "SpellExtraTFEnergyPercent= " + $("#SpellExtraTFEnergyPercent").val() + post;
    //   }

    //   if ($("#SpellExtraHealthDamagePercent").val() != "") {
    //       code += pre + "SpellExtraHealthDamagePercent= " + $("#SpellExtraHealthDamagePercent").val() + post;
    //   }

    //   if ($("#CleanseExtraTFEnergyRemovalPercent").val() != "") {
    //       code += pre + "CleanseExtraTFEnergyRemovalPercent= " + $("#CleanseExtraTFEnergyRemovalPercent").val() + post;
    //   }

    //   if ($("#SpellMisfireChanceReduction").val() != "") {
    //       code += pre + "SpellMisfireChanceReduction= " + $("#SpellMisfireChanceReduction").val() + post;
    //   }

    //   if ($("#SpellHealthDamageResistance").val() != "") {
    //       code += pre + "SpellHealthDamageResistance= " + $("#SpellHealthDamageResistance").val() + post;
    //   }

    //   if ($("#SpellTFEnergyDamageResistance").val() != "") {
    //       code += pre + "SpellTFEnergyDamageResistance= " + $("#SpellTFEnergyDamageResistance").val() + post;
    //   }

    //   if ($("#ExtraInventorySpace").val() != "") {
    //       code += pre + "ExtraInventorySpace= " + $("#ExtraInventorySpace").val() + post;
    //   }

       

    //   $("#textCode").val(code);

    //}

    function Clear() {

        var tablerow = $('table tr');

       

        $("#balanceTable > tbody > tr").each(function () {
            var cell = $(this).find('input[type=text]');
            
            var rowtotal = $(this).find('td:nth-child(4)');
            console.log(rowtotal.html());
          //  jQuery(this).children("img");
            cell.val("");
            rowtotal.html("");
        });

        recalculateValues();

    }

</script>

<style>
    table {
        padding: 3px;
        border: 1px solid black;
    }

    th {
        background-color: black;
        color: white;
        text-align: center;
    }

    tr {
        padding: 3px;
        border: 1px solid black;
    }

        tr:nth-child(odd) {
            background-color: lightgray;
        }

    td {
        text-align: center;
    }


    #desired {
        font-size: 15px;
    }

    red {
        color: red;
        font-weight: 900;
    }
</style>