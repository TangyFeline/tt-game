@model tfgame.ViewModels.ItemViewModel
           @using tfgame.CustomHtmlHelpers
@using tfgame.Statics

<div class="col-md-2 col-sm-3 col-xs-6 charaBox">
    <div class="portrait" style="background-image: url(@CharactersHere.GetImageURL(Model));">
        @{
            if (Model.dbItem.Level > 0 && Model.Item.ItemType != PvPStatics.ItemType_Consumeable)
            {
                <span class="icon-level"><b>@Model.dbItem.Level</b></span>
         
            }

            if (ViewBag.ShowDetailLinks != null && ViewBag.ShowDetailLinks == true)
            {
                   @Ajax.ActionLink("[+]", "ShowItemDetails", "Item", new { id = Model.dbItem.Id }, new AjaxOptions { UpdateTargetId = "fullDetails", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "detail_success", OnFailure = "detail_failure", OnBegin = "detail_wait" }, new { @class = "detailLink" })
            }
            
        }
        @CharactersHere.PrintItemTypeIcon(Model.Item)
    </div>

    @{

        if (ViewBag.DisableLinks == null || ViewBag.DisableLinks == "false")
        {


            <div style="text-align: center;">
                <p>@Model.Item.FriendlyName</p>




                @{
            if (Model.Item.ItemType != "consumable" && Model.Item.ItemType != "consumable_reuseable" && Model.Item.ItemType != PvPStatics.ItemType_Pet)
            {

                if (@Model.dbItem.IsEquipped == false)
                {
                    @Html.ActionLink("Wear", "Equip", "PvP", new { itemId = Model.dbItem.Id, putOn = "true" }, new { @class = "attackLink" })<br />
                    @Html.ActionLink("Drop", "Drop", "PvP", new { itemId = Model.dbItem.Id }, new { @class = "attackLink" })
                }

                if (@Model.dbItem.IsEquipped == true && @Model.dbItem.EquippedThisTurn == false)
                {
                    @Html.ActionLink("Take off", "Equip", "PvP", new { itemId = Model.dbItem.Id, putOn = "false" }, new { @class = "attackLink" })
                }

            }
            if (Model.Item.ItemType == PvPStatics.ItemType_Pet && (ViewBag.DisableReleaseLink == null || ViewBag.DisableReleaseLink == false))
            {
                @Html.ActionLink("Release", "Drop", "PvP", new { itemId = Model.dbItem.Id }, new { @class = "attackLink" })
            }
            else if (Model.Item.ItemType == "consumable")
            {
                @Html.ActionLink("Use", "Use", "PvP", new { itemId = Model.dbItem.Id }, new { @class = "attackLink" })<br />
                    @Html.ActionLink("Drop", "Drop", "PvP", new { itemId = Model.dbItem.Id }, new { @class = "attackLink" })
            }
            else if (Model.Item.ItemType == "consumable_reuseable")
            {

                if (Model.dbItem.TurnsUntilUse > 0)
                {
                    <span style="color: red;">Reuse in <b>@Model.dbItem.TurnsUntilUse</b> turns.</span>
                    @Html.ActionLink("Drop", "Drop", "PvP", new { itemId = Model.dbItem.Id }, new { @class = "attackLink" })<br />
                }
                else
                {
                    @Html.ActionLink("Use", "Use", "PvP", new { itemId = Model.dbItem.Id }, new { @class = "attackLink" })<br />
                    @Html.ActionLink("Drop", "Drop", "PvP", new { itemId = Model.dbItem.Id }, new { @class = "attackLink" })
                }


            }
                }

                @CharactersHere.PrintPvPIcon(Model.dbItem)
                <span class="price">Price:  @tfgame.Procedures.ItemProcedures.GetCostOfItem(Model, "buy") Arpeyjis</span>
                @Html.ActionLink("Purchase", "Purchase", "NPC", new { id = Model.dbItem.Id }, null)<br /><br /><br />

            </div>

        }

    }
</div>
    





    <style>
        .itemName {
            font-size: 20px;
            font-weight: bold;
        }

        .WasPerson {
            font-size: 15px;
            color: chocolate;
            font-style: italic;
        }

        .attackLink {
            text-align: center;
        }
    </style>
