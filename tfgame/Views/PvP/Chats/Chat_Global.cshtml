@{
    ViewBag.Title = "Chat";
}
<script>
    var chatTitle = "@ViewBag.ChatName";
</script>
<script src="~/Scripts/jquery.mobile.custom.min.js"></script>
<script src="~/Scripts/jquery.mobile.doubletap.js"></script>
<script src="~/Scripts/ttchat.js"></script>

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
                <li>
                    @Html.ActionLink("Global", "Chat", "PvP", new { room = "global" }, null)
                </li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">RP Rooms <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("RP Room 1", "Chat", "PvP", new { room = "rp1" }, null)</li>
                        <li>@Html.ActionLink("RP Room 2", "Chat", "PvP", new { room = "rp2" }, null)</li>
                        <li>@Html.ActionLink("RP Room 3", "Chat", "PvP", new { room = "rp3" }, null)</li>
                    </ul>
                </li>
                <li>
                    @Html.ActionLink("Create/Join Private Room", "PrivateChat", "PvP")
                </li>
                <li>
                    @Html.ActionLink("Chat Log", "ChatLog", "PvP", new { room = "global", filter = "lasth" }, new { target = "_blank" })
                </li>
                <li>@Html.ActionLink("Commands", "ChatCommands", "PvP", null, new { target = "_blank" })</li>
                <li><a href="#" id="showIgnore">Ignore</a></li>
                <li><a href="#" id="toggleImages" style="color: #734752 !important; font-weight:bold;">Toggle Images</a></li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Audio Settings <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li id="sounds_all"><a>All Sounds</a></li>
                        <li id="sounds_justme"><a>Some Sounds</a></li>
                        <li id="sounds_none"><a>No Sounds</a></li>
                    </ul>
                </li>
</ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<p class="infoMessage error" id="disconnected" style="display: none;">Your chat is currently disconnected from the server.  It will attempt to automatically reconnect.</p>

<div class="containerInner">
    <div id="ignoreDiv" style="display: none;" class="center-block">
        <p>Adding in any text to the ignore list will stop you from seeing any chat posts containing your entry, even if you write it.  Your entries will are now saved in local storage which means this setting should not be forgotten even if close your browser (unless your cache is cleared).</p>
        <input type="text" id="ignore" /><br />
        <button id="ignoreAdd" class="btn btn-danger btn-xs">Add to Ignore</button>
        <button id="ignoreReset" class="btn btn-success btn-xs">Reset Ignore</button>
        <button id="ignoreView" class="btn btn-alert btn-xs">View Ignored</button>
    </div>
    <div class="row chat-container">
        <div class="col-md-10 col-sm-12">
            <ul id="discussion"></ul>
        </div>
        <div class="col-md-2 hidden-sm hidden-xs">
            <div class="userlist-chat"></div>
        </div>
    </div>
        <div class="roomName">Room:  @ViewBag.ChatName <span id="autoScrollToggle">Autoscroll ON</span></div>
        <input type="text" id="message" maxlength="500" class="chatInput" />
        <input class="btn btn-chat center-block" type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
    
</div>
     @section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        var clear = true;
        var unreadCount = 0;

        var myname = "@Html.Raw(TempData["MyName"])";
        var mynameColor = "@Html.Raw(TempData["YourNameColor"])";
        var chatName = "@ViewBag.ChatName";

        var myVar = setInterval(function () { myTimer() }, 3000);
        var autoScrollEnabled = true;

        var ignored = [];
        var imagesOn = true;

        var allSounds = false;
        var mySound = false;

        $("#autoScrollToggle").click(function () {
            if (autoScrollEnabled == true) {
                autoScrollEnabled = false;
                $(this).text("Autoscroll OFF");
            } else {
                autoScrollEnabled = true;
                $(this).text("Autoscroll ON");
            }
        });

        function myTimer() {
            clear = true;
        }

        function chatLink() {
            var r = confirm("Are you sure that you want to watch Luxianne's stream?");
            if (r == true) {
                window.open('https://www.picarto.tv/live/channel.php?watch=Luxianne');
            } else {
            }
        }

        function dandyStream() {
            var r = confirm("Are you sure that you want to watch Blanca's stream?");
            if (r == true) {
                window.open('https://picarto.tv/live/channel.php?watch=Dandelines');
            } else {
            }
        }

        function chatLink2() {
            var r = confirm("You will be leaving now Transformania Time. Are you sure about that?");
            if (r == true) {
                window.open('http://goo.gl/forms/Zu0JeZBLn9');
            } else {
            }
        }

        $(function () {
            var chat = $.connection.chatHub;

            chat.client.updateUserList = function(userList) {
                ChatModule.updateUserList(userList);
            };

            chat.client.addNewMessageToPage = function (pic, name, message, chatColor) {

                // check and see if this poster or message has a banned substring.  If so, ignore it.  Otherwise display as normal
                var doNotDisplay = false;
                for (var i = 0; i < ignored.length; i++) {
                    if (name.indexOf(ignored[i]) >= 0 || message.indexOf(ignored[i]) >= 0) {
                        doNotDisplay = true;
                        break;
                    }
                }

                if (doNotDisplay == false) {

                    // if this is not a / command, write out the name and colon.  Otherwise only write the message.
                    if (name.length > 0 && imagesOn == true) {
                        $('#discussion ').append('<li><img src="' + pic + '"><strong>' + htmlEncodeName(name, chatColor) + '</strong>: ' + htmlEncode(message) + '</li>');
                    } else if (name.length > 0 && imagesOn == false) {
                        $('#discussion ').append('<li><strong>' + htmlEncodeName(name, chatColor) + '</strong>: ' + htmlEncode(message) + '</li>');

                    } else if (imagesOn == true && pic.length > 0) {
                        $('#discussion ').append('<li><img src="' + pic + '"><strong>' + injectColor(chatColor, "start") + htmlEncode(message) + '</span></li>');
                    } else {
                        $('#discussion ').append('<li><strong>' + injectColor(chatColor, "start") + htmlEncode(message) + '</span></li>');
                    }

                    if (autoScrollEnabled == true) {
                        $('#discussion ').animate({ scrollTop: $('#discussion').prop("scrollHeight") }, 500);
                    }

                    // add onclick to last element
                    $('ul#discussion li:last strong:first').doubleTap(function (e) {
                        if (name.length == 0)
                            name = $(this).find('strong').first().text();

                        ChatModule.onUserDoubleTapped(name, e);
                    });

                    if (!document.hasFocus()) {
                        unreadCount++;
                        $(document).attr('title', '(' + unreadCount + ') ' + chatTitle);
                    }

                    $("#disconnected").hide();

                    ChatModule.renderUserList();

                } else {
                   
                }
            };

            $('#displayname').val("");
            $('#message').focus();
            $.connection.hub.start().done(function () {
                chat.server.joinRoom(chatName);
                chat.state.toRoom = chatName;
                $("#disconnected").hide();
                $(window).focus(function () {
                    $(document).attr('title', chatTitle);
                    unreadCount = 0;
                });

                $('#sendmessage').click(function () {

                    if (clear == true) {
                        chat.server.send($('#displayname').val(), $('#message').val());
                        $('#message').val('').focus();
                    }
                        clear = false;
                    });



            });

            $.connection.hub.disconnected(function () {
                $("#disconnected").show();
                setTimeout(function () {
                    $.connection.hub.start();
                }, 10000); // Restart connection after 5 seconds.
            });

            $(document).keypress(function (e) {
                if (e.which == 13) {

                    if (clear == true) {

                        chat.server.send($('#displayname').val(), $('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                        clear = false;

                    }


                }

            });

            $(document).click(function () {
                $(document).attr('title', chatTitle);
                unreadCount = 0;
            });

        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            encodedValue = encodedValue.replace("[.[", "<span class='timeago'>");
            encodedValue = encodedValue.replace("].]", "</span>");
            encodedValue = encodedValue.replace("[-[", "<span class='enterMsg'>");
            encodedValue = encodedValue.replace("]-]", "</span>");
            encodedValue = encodedValue.replace("[=[", "<span class='dm'>");
            encodedValue = encodedValue.replace("]=]", "</span>");
            encodedValue = encodedValue.replace("[+[", "<span class='me'>");
            encodedValue = encodedValue.replace("]+]", "</span>");
            encodedValue = encodedValue.replace("Judoo (admin)", "<span class='adminFont'>Judoo (admin)</span>");
            encodedValue = encodedValue.replace("Mizuho (dev)", "<span class='adminFont'>Mizuho (dev)</span>");
            encodedValue = encodedValue.replace("Arrhae (dev)", "<span class='adminFont'>Arrhae (dev)</span>");
            encodedValue = encodedValue.replace("Mezaron (dev)", "<span class='adminFont'>Mezaron (dev)</span>");
            encodedValue = encodedValue.replace("Tempest (dev)", "<span class='adminFont'>Tempest (dev)</span>");
            encodedValue = encodedValue.replace(myname, "<span style='background: #FFE9D5; color: " + mynameColor + ";'><strong> " + myname + "</strong></span>");
            encodedValue = encodedValue.replace("[luxa]", "<a onclick='chatLink()'><img style='width:436px; height:49px' src='//i.imgur.com/khaIWKZ.jpg'></a>");
            encodedValue = encodedValue.replace("[blanca]", "<a onclick='dandyStream()'>Blanca is streaming now</a>");
            encodedValue = encodedValue.replace("[poll]", "Please take part in our Transformation Preferences Poll. <a onclick='chatLink2()'>Transformation Poll - http://goo.gl/forms/Zu0JeZBLn9 </a>");
            encodedValue = encodedValue.replace("[fp]", "<pre>  .-'---`-.\n,'          `.\n|             \\\n|              \\\n\\           _  \\\n,\\  _    ,'-,/-)\\\n( * \\ \\,' ,' ,'-)\n `._,)     -',-')\n   \\/         ''/\n    )        / /\n   /       ,'-'</pre>");
            encodedValue = encodedValue.replace("[sd]", "<pre>  ------\n,'   SERVER PUBLISH HAPPENING SOON.       `.\n|     (Brace for derp.)        \\\n");
            encodedValue = fixLinks(encodedValue);

            // play sound(s)
            if (encodedValue.indexOf(myname) > 0 && mySound == true) {
                var popaudio = new Audio('../Sounds/pop2.ogg');
                popaudio.play();
            } else if (allSounds == true){
                var popaudio = new Audio('../Sounds/pop.ogg');
                popaudio.play();
            }

               
           // }


            return encodedValue;
        }

        function htmlEncodeName(value, nameColor) {


            var encodedValue = $('<div />').text(value).html();

            encodedValue = "<span style='color:" + nameColor + ";'>" + encodedValue + "</span>";


            encodedValue = encodedValue.replace("Judoo (admin)", "<span class='adminFont'>Judoo (admin)</span>");
            encodedValue = encodedValue.replace("Mizuho (dev)", "<span class='adminFont'>Mizuho (dev)</span>");
            encodedValue = encodedValue.replace("Arrhae (dev)", "<span class='adminFont'>Arrhae (dev)</span>");
            encodedValue = encodedValue.replace("Mezaron (dev)", "<span class='adminFont'>Mezaron (dev)</span>");
            encodedValue = encodedValue.replace("Tempest (dev)", "<span class='adminFont'>Tempest (dev)</span>");
            encodedValue = encodedValue.replace(myname, "<span style='text-decoration: underline; color: " + mynameColor + ";'><strong> " + myname + "</strong></span>");
            encodedValue = fixLinks(encodedValue);

            return encodedValue;
        }

        function injectColor(nameColor, startOrEnd) {
            if (startOrEnd == "start") {
                return "<span style='color:" + nameColor + ";'>";
            } else {
                return "</span>";
            }
            
        }

        //this is the function that fixes links
        function fixLinks(input) {
           
            if (input) {
               
                input = input.replace(
                /((https?\:\/\/)|(www\.))(\S+)(\w{2,4})(:[0-9]+)?(\/|\/([\w#!:.?+=&%@@!\-\/]))?/gi,
                function (url) {
                    var full_url = url;
                    if (!full_url.match('^https?:\/\/')) {
                        full_url = 'http://' + full_url;
                    }
                    return "<a class='chatlink' data-url='" + full_url + "'>" + url + "</a>";
                }
                );
            }
            return input;
        }

        $("#ignoreAdd").click(function () {
            ignored.push($("#ignore").val());
            $("#ignore").val("");
            alert("Now ignoring:  " + ignored);
            localStorage.setItem("chat_IgnoreList", JSON.stringify(ignored));
        });

        $("#ignoreReset").click(function () {
            ignored = [];
            alert("No longer ignoring anyone.");
        });

        $("#ignoreView").click(function () {
            $('#discussion ').append('<li><b>You will not see any chat messages that contain the following substrings:</b></li>');
            if (ignored.length > 0) {
            for (var x = 0; x < ignored.length; x++) {
                $('#discussion ').append('<li>' + ignored[x] + ' </li>');
            }
            } else {
                $('#discussion ').append('<li><i>You do not have anyone or anything on your ignore list.</i></li>');
            }
        });

        $("#showIgnore").click(function () {
            if ($("#ignoreDiv").is(":visible")==false) {
                $("#ignoreDiv").show();
            } else {
                $("#ignoreDiv").hide();
            }
        });

        $("#toggleImages").click(function () {
            imagesOn = !imagesOn;
           
            if (imagesOn == false) {
                alert("Images disabled.");
                localStorage.setItem("chat_ImagesOn", "false");
            } else {
                alert("Images enabled.");
                localStorage.setItem("chat_ImagesOn", "true");
            }
        });


        $("#sounds_all").click(function () {
            allSounds = true;
            mySound = true;
            localStorage.setItem("chat_sound_" + chatName, 2);
            alert("All sounds enabled for this room.");
        });

        $("#sounds_justme").click(function () {
            allSounds = false;
            mySound = true;
            localStorage.setItem("chat_sound_" + chatName, 1);
            alert("Some sounds enabled for this room.  You will only hear a sound if somone addresses you in particular.");
        });

        $("#sounds_none").click(function () {
            allSounds = false;
            mySound = false;
            localStorage.setItem("chat_sound_" + chatName, 0);
            alert("All sounds disabled for this room.");
        });


        //This section has to go somewhere, when someone clicks something with the "chatlink" class, it will run the popup.
        $("#discussion").on('click', '.chatlink', function () {
            console.log("xyz");
            var magicurl = $(this).data('url');
            var r = confirm("Are you sure you want to go to " + magicurl + "?  Be aware that this may be an external link that leads outside of Transformania Time, so be careful to only proceed if intended.");
            if (r == true) {
                window.open(magicurl);
            } else {
            }
        });

         // load some defaults
        $(document).ready(function () {
            $(document).attr('title', chatTitle);
            var imagesOnValue = localStorage.getItem("chat_ImagesOn");
            if (imagesOnValue === "true") {
                imagesOn = true;
            } else if (imagesOnValue === "false") {
                imagesOn = false;
            } else {
                imagesOn = true; // first time load undefined
            }

            ignored = JSON.parse(localStorage.getItem("chat_IgnoreList"));
            if (ignored == null) {
                ignored = [];
            }

            // load up sound preferences for this room
            var soundSettings = localStorage.getItem("chat_sound_" + chatName);
            if (soundSettings == undefined) {
                localStorage.setItem("chat_sound_" + chatName, 0);
                soundSettings = 0;
            }

            // none
            if (soundSettings == 0) {
                allSounds = false;
                mySound = false;

            // some
            } else if (soundSettings == 1) {
                allSounds = false;
                mySound = true;

            // all
            } else if (soundSettings == 2) {
                allSounds = true;
                mySound = true;
            }

        });



    </script>
}