@{
    ViewBag.Title = "Chat";
}
@Html.ActionLink("Back to game", "Play", "PvP")
<p class="bad" id="disconnected" style="display: none;">Your chat is currently disconnected from the server.  It will attempt to automatically reconnect.</p>

<div class="container">
    <input type="text" id="message" maxlength="500" class="chatInput" />
    <input type="button" id="sendmessage" value="Send" style="width: 50%; padding: 6px; margin-left: auto; margin-right: auto; display: block;" />
    <input type="hidden" id="displayname" />
    <ul id="discussion"></ul>
</div>

<center style="margin-bottom: 5px;">Welcome to the chat. Please remain civil. This page does not save anything, so reloading this page will clear the chat.<br /><br />
    Change room:
    @Html.ActionLink("RP Room 1", "Chat", "PvP", new { room = "rp1" }, null)
    @Html.ActionLink("RP Room 2", "Chat", "PvP", new { room = "rp2" }, null)
    @Html.ActionLink("RP Room 3", "Chat", "PvP", new { room = "rp3" }, null)
    <span class="newlinkyellow">@Html.ActionLink("Create/Join Private Room", "PrivateChat", "PvP")</span>
</center>
<center>
    @Html.ActionLink("Chat Log", "ChatLog", "PvP", new { room = "global", filter = "lasth" }, new { target = "_blank" })
    @Html.ActionLink("Commands", "ChatCommands", "PvP", null, new { target = "_blank" })
</center>

@Html.ActionLink("Back to game", "Play", "PvP")

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        var clear = true;
        var unreadCount = 0;

        var myname = "@Html.Raw(TempData["MyName"])";

        var myVar = setInterval(function () { myTimer() }, 3000);

        function myTimer() {
   
            clear = true;
        }

        $(function () {
            var chat = $.connection.chatHub;
            

            chat.client.addNewMessageToPage = function (name, message) {
                
                // if this is not a / command, write out the name and colon.  Otherwise only write the message.
                if (name.length > 0) {
                    $('#discussion ').prepend('<li><strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
                } else {
                    $('#discussion ').prepend('<li><strong>' + htmlEncode(message) + '</li>');
                }

                // add onclick to last element
                $('ul#discussion li:first strong:first').dblclick(function () {
                    $('#message').val("@@" + name + "  " + $('#message').val());
                    $('#message').focus();
                });

                if (!document.hasFocus()) {
                    unreadCount++;
                    $(document).attr('title', 'Chat - ' + unreadCount + ' new messages');
                }

                $("#disconnected").hide();

            };

            $('#displayname').val("");
            $('#message').focus();
            $.connection.hub.start().done(function () {
                chat.server.joinRoom("global");
                chat.state.toRoom = "global";
                $("#disconnected").hide();
                $(window).focus(function () {
                    $(document).attr('title', 'Chat');
                    unreadCount = 0;
                });

                $('#sendmessage').click(function () {

                    if (clear == true) {
                        chat.server.send($('#displayname').val(), $('#message').val());
                        $('#message').val('').focus();
                    }
                        clear = false;
                    });



            });

            $.connection.hub.disconnected(function () {
                $("#disconnected").show();
                setTimeout(function () {
                    $.connection.hub.start();
                }, 10000); // Restart connection after 5 seconds.
            });

            $(document).keypress(function (e) {
                if (e.which == 13) {

                    if (clear == true) {

                        chat.server.send($('#displayname').val(), $('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                        clear = false;

                    }
                    
               
                }

            });

            $(document).click(function () {
                $(document).attr('title', 'Chat');
                unreadCount = 0;
            });

        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            encodedValue = encodedValue.replace("[.[", "<span class='timeago'>");
            encodedValue = encodedValue.replace("].]", "</span>");
            encodedValue = encodedValue.replace("[-[", "<span class='enterMsg'>");
            encodedValue = encodedValue.replace("]-]", "</span>");
            encodedValue = encodedValue.replace("[=[", "<span class='dm'>");
            encodedValue = encodedValue.replace("]=]", "</span>");
            encodedValue = encodedValue.replace("[+[", "<span class='me'>");
            encodedValue = encodedValue.replace("]+]", "</span>");
            encodedValue = encodedValue.replace("Judoo (admin)", "<span class='adminFont'>Judoo (admin)</span>");
            encodedValue = encodedValue.replace("Mizuho (dev)", "<span class='adminFont'>Mizuho (dev)</span>");

            encodedValue = encodedValue.replace(myname, "<span class='youFont'><strong> " + myname + "</strong></span>");
            


            return encodedValue;
        }

        $(window).bind('beforeunload', function() {
            return 'Are you sure you want to leave?';
        });


    </script>



    <style>
        .chatInput {
            border: 1px solid black;
            margin: 5px 0px 0px 0px;
            width: 80%;
            margin-left: auto;
            margin-right: auto;
            display: block;
            padding: 6px;
        }

        #discussion {
            width: 100%;
            height: 600px;
            overflow-y: scroll;
            text-wrap: normal;
            border: 2px solid black;
            border-radius: 8px;
            padding: 5px;
            background-color: #d6f8ff;
            margin-top: -2px;
        }

        #discussion li{
            padding-top: 4px;
            padding-bottom: 4px;
        }

            #discussion li:nth-child(odd) {
                background-color: #b8dbff;
            }

            #discussion li:nth-child(even) {
                background-color: #d4e9ff;
            }

            .adminFont {
                color: darkred;
            }

            .youFont {
                color: darkblue;
            }

        .dm {
            color: darkgreen;
            font-weight: 800;
        }

        .me {
            font-style: italic;
            font-weight: 900;
        }

        strong {
            cursor: pointer;
        }

            strong:hover {
                color: darkolivegreen;
            }

        .enterMsg {
            color: black;
            font-weight: 800;
        }
    </style>
}