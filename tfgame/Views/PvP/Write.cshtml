@model tfgame.dbModels.Models.Message

<head>
    <script src="~/Scripts/jquery-2.1.0.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <link href="~/Content/PvP.css" rel="stylesheet" />
</head>

@{
    if (ViewBag.RespondingToMsg != null && ViewBag.RespondingToMsg != "")
    {
        <p class="responseText">
            "@ViewBag.RespondingToMsg
        </p>
    }
}

@using (Html.BeginForm("SendMessage", "PvP", Model))
{

    <p><b>What is your message to @ViewBag.SendingToName?</b></p>
    @Html.TextAreaFor(m => m.MessageText)<br />
    <span class="charCounter" id="textRemaining"></span>


    @Html.HiddenFor(m => m.ReceiverId)
    @Html.HiddenFor(m => m.SenderId)

    <br />
    <input type="submit" value="Send" />

}

<div class="error">
    @ViewBag.ErrorMessage
</div>

@Html.ActionLink("Back to Messages", "MyMessages", "PvP")

@Html.ActionLink("Back to game", "Play", "PvP")

<style>
    .responseText {
        color: #4C4C4C;
        font-style: oblique;
        border: 1px solid lightgray;
        height: auto;
        border-radius: 10px;
    }

    .responseText::first-letter {
        font-size: 30px;
        font-weight: 500;
    }
</style>

<script>
    $("#MessageText").keydown(function () {
        var remaining = 1000 - $("#MessageText").val().length;
        $("#textRemaining").html(remaining + " characters remaining");
    });
</script>
