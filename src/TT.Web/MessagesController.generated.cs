// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;
namespace TT.Web.Controllers
{
    public partial class MessagesController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MessagesController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected MessagesController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReadMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReadMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReadConversation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReadConversation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkReadStatus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkReadStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Write()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Write);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendCovenantWideMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCovenantWideMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkAsAbusive()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsAbusive);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MarkAsAbusivePreview()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsAbusivePreview);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MessagesController Actions { get { return MVC.Messages; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "messages";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "messages";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string DeleteMessage = ("DeleteMessage").ToLowerInvariant();
            public readonly string ReadMessage = ("ReadMessage").ToLowerInvariant();
            public readonly string ReadConversation = ("ReadConversation").ToLowerInvariant();
            public readonly string MarkReadStatus = ("MarkReadStatus").ToLowerInvariant();
            public readonly string Write = ("Write").ToLowerInvariant();
            public readonly string SendMessage = ("SendMessage").ToLowerInvariant();
            public readonly string CovenantWideMessage = ("CovenantWideMessage").ToLowerInvariant();
            public readonly string SendCovenantWideMessage = ("SendCovenantWideMessage").ToLowerInvariant();
            public readonly string MarkAsAbusive = ("MarkAsAbusive").ToLowerInvariant();
            public readonly string MarkAsAbusivePreview = ("MarkAsAbusivePreview").ToLowerInvariant();
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string offset = ("offset").ToLowerInvariant();
        }
        static readonly ActionParamsClass_DeleteMessage s_params_DeleteMessage = new ActionParamsClass_DeleteMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteMessage DeleteMessageParams { get { return s_params_DeleteMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteMessage
        {
            public readonly string deleteAll = ("deleteAll").ToLowerInvariant();
            public readonly string messageId = ("messageId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ReadMessage s_params_ReadMessage = new ActionParamsClass_ReadMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReadMessage ReadMessageParams { get { return s_params_ReadMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReadMessage
        {
            public readonly string messageId = ("messageId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ReadConversation s_params_ReadConversation = new ActionParamsClass_ReadConversation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReadConversation ReadConversationParams { get { return s_params_ReadConversation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReadConversation
        {
            public readonly string messageId = ("messageId").ToLowerInvariant();
            public readonly string reversed = ("reversed").ToLowerInvariant();
        }
        static readonly ActionParamsClass_MarkReadStatus s_params_MarkReadStatus = new ActionParamsClass_MarkReadStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkReadStatus MarkReadStatusParams { get { return s_params_MarkReadStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkReadStatus
        {
            public readonly string messageId = ("messageId").ToLowerInvariant();
            public readonly string readStatus = ("readStatus").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Write s_params_Write = new ActionParamsClass_Write();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Write WriteParams { get { return s_params_Write; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Write
        {
            public readonly string playerId = ("playerId").ToLowerInvariant();
            public readonly string responseTo = ("responseTo").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SendMessage s_params_SendMessage = new ActionParamsClass_SendMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendMessage SendMessageParams { get { return s_params_SendMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendMessage
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SendCovenantWideMessage s_params_SendCovenantWideMessage = new ActionParamsClass_SendCovenantWideMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendCovenantWideMessage SendCovenantWideMessageParams { get { return s_params_SendCovenantWideMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendCovenantWideMessage
        {
            public readonly string Message = ("Message").ToLowerInvariant();
        }
        static readonly ActionParamsClass_MarkAsAbusive s_params_MarkAsAbusive = new ActionParamsClass_MarkAsAbusive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkAsAbusive MarkAsAbusiveParams { get { return s_params_MarkAsAbusive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkAsAbusive
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_MarkAsAbusivePreview s_params_MarkAsAbusivePreview = new ActionParamsClass_MarkAsAbusivePreview();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkAsAbusivePreview MarkAsAbusivePreviewParams { get { return s_params_MarkAsAbusivePreview; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkAsAbusivePreview
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string CovenantWideMessage = "CovenantWideMessage";
                public readonly string MarkAsAbusivePreview = "MarkAsAbusivePreview";
                public readonly string Messages = "Messages";
                public readonly string ReadMessage = "ReadMessage";
                public readonly string Write = "Write";
            }
            public readonly string CovenantWideMessage = "~/Views/Messages/CovenantWideMessage.cshtml";
            public readonly string MarkAsAbusivePreview = "~/Views/Messages/MarkAsAbusivePreview.cshtml";
            public readonly string Messages = "~/Views/Messages/Messages.cshtml";
            public readonly string ReadMessage = "~/Views/Messages/ReadMessage.cshtml";
            public readonly string Write = "~/Views/Messages/Write.cshtml";
            static readonly _partialClass s_partial = new _partialClass();
            public _partialClass partial { get { return s_partial; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _partialClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string Conversation = "Conversation";
                }
                public readonly string Conversation = "~/Views/Messages/partial/Conversation.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_MessagesController : TT.Web.Controllers.MessagesController
    {
        public T4MVC_MessagesController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int offset);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(int offset)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            IndexOverride(callInfo, offset);
            return callInfo;
        }

        [NonAction]
        partial void DeleteMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool deleteAll, int messageId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteMessage(bool deleteAll, int messageId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "deleteAll", deleteAll);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "messageId", messageId);
            DeleteMessageOverride(callInfo, deleteAll, messageId);
            return callInfo;
        }

        [NonAction]
        partial void ReadMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int messageId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReadMessage(int messageId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReadMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "messageId", messageId);
            ReadMessageOverride(callInfo, messageId);
            return callInfo;
        }

        [NonAction]
        partial void ReadConversationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int messageId, bool reversed);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReadConversation(int messageId, bool reversed)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReadConversation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "messageId", messageId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reversed", reversed);
            ReadConversationOverride(callInfo, messageId, reversed);
            return callInfo;
        }

        [NonAction]
        partial void MarkReadStatusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int messageId, int readStatus);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkReadStatus(int messageId, int readStatus)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkReadStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "messageId", messageId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "readStatus", readStatus);
            MarkReadStatusOverride(callInfo, messageId, readStatus);
            return callInfo;
        }

        [NonAction]
        partial void WriteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int playerId, int responseTo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Write(int playerId, int responseTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Write);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "playerId", playerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "responseTo", responseTo);
            WriteOverride(callInfo, playerId, responseTo);
            return callInfo;
        }

        [NonAction]
        partial void SendMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.MessageSubmitViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendMessage(TT.Domain.ViewModels.MessageSubmitViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            SendMessageOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void CovenantWideMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CovenantWideMessage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CovenantWideMessage);
            CovenantWideMessageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SendCovenantWideMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string Message);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendCovenantWideMessage(string Message)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCovenantWideMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Message", Message);
            SendCovenantWideMessageOverride(callInfo, Message);
            return callInfo;
        }

        [NonAction]
        partial void MarkAsAbusiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkAsAbusive(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsAbusive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            MarkAsAbusiveOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void MarkAsAbusivePreviewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult MarkAsAbusivePreview(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkAsAbusivePreview);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            MarkAsAbusivePreviewOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
