@model TT.Domain.ViewModels.Quest.QuestsAtLocationViewModel
    @using TT.Domain.Models

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div>
    <p class="infoMessage result"></p>
    <p class="infoMessage error"></p>
    <p class="infoMessage suberror"></p>
</div>

<div class="containerInner">

    <h1>Available Quests (@Model.AvailableQuests.Count())</h1>

    @{
        foreach (QuestStart s in Model.AvailableQuests)
        {
            <div style="border: 1px solid black">
                <p>@Html.ActionLink("Begin", "StartQuest", "Quest", new { Id = s.Id }, new { @class = "inanimateAction"})</p>
                <h4>@s.Name</h4>
                <p><i>@s.Description</i></p><br />
                <p><b>Themes:  @s.Tags</b></p>
                
                @{
                    if (s.MinStartLevel > 0)
                    {
                        <p>Minimum player level:  @s.MinStartLevel</p>
                    }
                    if (s.MaxStartLevel < 99999)
                    {
                        <p>Maximum player level:  @s.MaxStartLevel</p>
                    }
                    if (s.MinStartTurn > 0)
                    {
                        <p>Minimum game turn:  @s.MinStartTurn</p>
                    }
                    if (s.MaxStartTurn < 99999)
                    {
                        <p>Maximum game turn:  @s.MaxStartTurn</p>
                    }
                }

            </div>
        }
    }

    <h1>All Quests (@Model.AllQuests.Where(q => q.IsLive).Count())</h1>

    @{
        foreach (QuestStart s in Model.AllQuests.Where(q => q.IsLive==true))
        {
            <div style="border: 1px solid black">
                <h4>@s.Name</h4>
                <p><i>@s.Description</i></p><br />
                <p><b>Themes:  @s.Tags</b></p>

                @{
                    if (s.MinStartLevel > 0)
                    {
                        <p>Minimum player level:  @s.MinStartLevel</p>
                    }
                    if (s.MaxStartLevel < 99999)
                    {
                        <p>Maximum player level:  @s.MaxStartLevel</p>
                    }
                    if (s.MinStartTurn > 0)
                    {
                        <p>Minimum game turn:  @s.MinStartTurn</p>
                    }
                    if (s.MaxStartTurn < 99999)
                    {
                        <p>Maximum game turn:  @s.MaxStartTurn</p>
                    }
                }

            </div>
        }
    }

</div>