@model TT.Domain.ViewModels.CovenantViewModel
@using TT.Domain.Models
@using TT.Domain.ViewModels
@using TT.Domain.Statics

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", MVC.PvP.Play())</li>
                <li>@Html.ActionLink("Create your own Covenant", MVC.Covenant.StartNewCovenant())</li>
                <li>@Html.ActionLink("View all Covenants", MVC.Covenant.CovenantList())</li>
                <li>@Html.ActionLink("Buy Furniture", MVC.Covenant.ViewAvailableFurniture())</li>
                <li>@Html.ActionLink("Use Furniture", MVC.Covenant.MyCovenantFurniture())</li>
                @{
                    if (Model.dbCovenant != null)
                    {
                        <li><a href="javascript:confirmDeletion()">Leave Covenant</a></li>
                    }
                    if (ViewBag.HasApplication)
                    {
                        <li>@Html.ActionLink("Withdraw Coven Application", MVC.Covenant.WithdrawApplication())</li>
                    }
                    if (Model.dbCovenant != null && ViewBag.Player.Id == Model.dbCovenant.LeaderId)
                    {
                        <li>@Html.ActionLink("Leader", MVC.Covenant.CovenantLeaderAdmin())</li>
                    }
                    <li>@Html.ActionLink("Coven Log", MVC.Covenant.MyCovenantLog())</li>
                }
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div>
    <p class="infoMessage result">@Html.Raw(ViewBag.Result)</p>
    <p class="infoMessage error">@ViewBag.ErrorMessage</p>
    <p class="infoMessage suberror">@ViewBag.SubErrorMessage</p>
</div>

<div class="containerInner text-center">

    <div id="realLink" class="deleteMessegeConfirm">
        <span style="color:red; font-weight: bold;">Do you really want to leave your covenant? If yes then please click link below:</span>
        @Html.ActionLink("Leave this Covenant", MVC.Covenant.LeaveCovenant())<br />
    </div>

    @{
        if (Model.dbCovenant != null)
        {
            <div class="covFlag" style="background-image: url(/Images/PvP/CovenantFlags/@Model.dbCovenant.FlagUrl)"></div>
            <p class="covHeader">You are a member of <span class="covName">@Model.dbCovenant.Name.</span></p>
            <p style="margin-bottom:1px;"><b>@Model.dbCovenant.SelfDescription</b></p>

            if (ViewBag.Player.Id == Model.dbCovenant.LeaderId)
            {
                <b>You are this covenant's leader.</b>
            }
            else
            {
                @Html.ActionLink("Led by " + Model.Leader.GetFullName(), MVC.PvP.LookAtPlayer(Model.Leader.Id))
            }

            if (!Model.dbCovenant.HomeLocation.IsNullOrEmpty())
            {
                <i>This covenant has a level <b>@Model.dbCovenant.Level</b> safeground at @LocationsStatics.LocationList.GetLocation.FirstOrDefault(l => l.dbName == Model.dbCovenant.HomeLocation).Name and has enchanted <b>@ViewBag.LocationsControlled</b> locations.</i>
            }

            <p style="margin-bottom:-15px;">Arpeyjis in treasury:  <b>@Math.Floor(Model.dbCovenant.Money)</b><span title="Arpeyjis" class="icon icon-money"></span></p>

            <br /><p>
                You can send some of your Arpeyjis to your covenant where your covenant leader can choose to distribute the covenant's Arpeyjis to its members in need.  You must not have spent any action points in 30 minutes in order to do this.  How many would you like to send?
                <br />You have <b>@ViewBag.MyMoney</b> Arpeyjis.
            </p>

            @Html.ActionLink("20", MVC.Covenant.AddToCovenantChest(20))<span title="Arpeyjis" class="icon icon-money"></span>
            @Html.ActionLink("100", MVC.Covenant.AddToCovenantChest(100))<span title="Arpeyjis" class="icon icon-money"></span>
            @Html.ActionLink("500", MVC.Covenant.AddToCovenantChest(500))<span title="Arpeyjis" class="icon icon-money"></span>

            <div style="clear:both"></div>




        }
    }
</div>

@{
    if (Model.dbCovenant != null)
    {
        <div class="onlinePlayersWrapperBG">
            <div class="row">


                @{
        foreach (PlayerFormViewModel p in Model.Members.OrderByDescending(c => c.Player.Level).ThenByDescending(c => c.Player.XP))
        {
            <div class="col-md-2 col-sm-4 col-xs-12 charaBox">
                <div class="charaBoxInner">
                    <div>
                        <p>
                            @Html.Partial(MVC.PvP.Views.Player_Partial, p)
                            @if (ViewBag.Player.Id == Model.dbCovenant.LeaderId || ViewBag.IAmCaptain)
                            {
                                @Html.ActionLink("20", MVC.Covenant.GiveMoneyFromCovenantChest(p.Player.Id, 20))
                                @Html.ActionLink("100", MVC.Covenant.GiveMoneyFromCovenantChest(p.Player.Id, 100))
                                @Html.ActionLink("500", MVC.Covenant.GiveMoneyFromCovenantChest(p.Player.Id, 500))
                            }
                        </p>
                    </div>
                </div>
            </div>
        }
                }


            </div>
        </div>

    }
    else
    {
        <b>You are not currently in a covenant.</b>
    }

}

<script>
    function confirmDeletion() {
        document.getElementById('realLink').style.display = "block";
    }
</script>