@using TT.Domain.Statics
@model TT.Domain.ViewModels.AddStrikeViewModel
@{
    ViewBag.Title = "Assign Strike";
}

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    <li><a href="@Url.Action(MVC.Moderator.Index())">Back to moderator panel</a></li>
}

<div class="containerInner">
    <h1>Assign Strike</h1>
    <p>Moderators can assign a strike to a misbehaving player here.</p><br>

    <p>This strike is being posted against <a href="@Url.Action(MVC.PvP.LookAtPlayer_FromMembershipId(Model.UserId))">@Model.PlayerUserStrikesDetail.FirstName @Model.PlayerUserStrikesDetail.LastName</a> with the account name "<b>@Model.PlayerUserStrikesDetail.User.UserName</b>".</p><br>

    <p>@Model.PlayerUserStrikesDetail.FirstName is at <b>@Model.PlayerUserStrikesDetail.User.Strikes.Count()/@PvPStatics.MaxStrikesPerRound</b> strikes.</p><br>

    @{
        if (Model.PlayerUserStrikesDetail.User.Strikes.Any())
        {
            <p>Previous strikes:</p>

            <table class="table table-hover dt-responsive messageTable">
                <thead>
                    <tr>
                        <th>Date/Time</th>
                        <th>Reason</th>
                        <th>Round</th>
                        <th>By Moderator</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var strike in Model.PlayerUserStrikesDetail.User.Strikes)
                        {
                            <tr>
                                <td>@strike.Timestamp.ToString("MMMM dd, yyyy")</td>
                                <td>@strike.Reason</td>
                                <td>@strike.Round</td>
                                <td>@strike.FromModerator.UserName</td>
                            </tr>
                        }
                    }
                </tbody>
            </table><br><br>
        }
    }


    @using (Html.BeginForm(MVC.Moderator.AddStrike(), FormMethod.Post))
    {

        @Html.AntiForgeryToken()

        <p>Reason for strike:</p>
        @Html.TextAreaFor(m => m.Reason, new { @class = "text-container" })<br><br>

        @Html.HiddenFor(m => m.UserId)

        <br>
        <input type="submit" class="btn btn-chat" value="Send" />
    }

</div>