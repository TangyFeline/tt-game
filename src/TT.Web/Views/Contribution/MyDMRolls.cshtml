@model IEnumerable<TT.Domain.Models.DMRoll>
@using Microsoft.AspNet.Identity;
@using TT.Domain.Statics

<div class="result">@ViewBag.Result</div>

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    <li><a href="@Url.Action(MVC.Contribution.Contribute())">Back to contributions</a></li>
    <li><a href="@Url.Action(MVC.Contribution.DMRoll(-1))">New DM encounter</a></li>
    <li><a href="@Url.Action(MVC.Chat.ChatCommands())">Using DM encounters</a></li>
    @{
        if (User.IsInRole(PvPStatics.Permissions_Admin))
        {
            <li><a href="@Url.Action(MVC.Contribution.ReviewDMRolls())">Approve DM encounters</a></li>
        }
    }
}

<h1>Your DM Encounter Contributions</h1>

<p>DM encounters are random encounters that can be rolled in the game's chat rooms.  These are meant for the sake of roleplaying, a random enemy / trap / event generator.</p>


<a href="@Url.Action(MVC.Contribution.DMRoll(-1))">START NEW</a>
<hr>

@foreach (var roll in Model.OrderBy(r => r.Tags))
{

    <p><span style="color: darkblue;">@roll.Tags.ToUpper()</span>  <span style="color: darkred;">@roll.ActionType.ToUpper()</span></p>
    if (roll.IsLive)
    {
        <span style="color: red; background-color: yellow; border: 1px solid red;">LIVE</span>
    }

    <a href="@Url.Action(MVC.Contribution.DMRoll(roll.Id))">roll.Message</a>
    <hr>
}
