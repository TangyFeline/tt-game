@using TT.Web.CustomHtmlHelpers
@model IEnumerable<TT.Domain.Items.DTOs.ItemDetail>
@{
    ViewBag.Title = "Sell Pet";
}

@section scripts
{
    <script src="@Links.Scripts.itemDetailModal_js"></script>
}

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    <li><a href="@Url.Action(MVC.NPC.TradeWithPetMerchant())">Back to Purchase List</a></li>
}

<div class="containerInner">

    <h1>Sell to Wüffie</h1>

    @{
        if (Model.Any() && Model.First().IsPermanent)
        {
            <p>You can sell your pet to Wuffie.  Wuffie will make sure <b>@Model.First().FormerPlayer.FullName</b> your <b>@Model.First().ItemSource.FriendlyName</b> is well taken care of until a new owner can be found for them!</p>
        }
        else if (Model.Any() && !Model.First().IsPermanent)
        {
            <p>While you have a pet, Wuffie only takes care of pets who have been permanently sealed in their new form.</p>
        }
        else
        {
            <p>You can sell your pet to Wuffie later.  Unfortunately you don't have a pet right now.</p>
        }
    }

    <hr>

    @{

        foreach (var i in Model.OrderBy(i => i.dbName).ThenByDescending(i => i.Level))
        {
            <div class="col-md-2 col-sm-3 col-xs-6 charaBox">

                @Html.Partial(MVC.PvP.Views.partial.partial_ItemDetail, i)

                <div style="text-align: center;">
                    <p>@i.ItemSource.FriendlyName @Html.Partial(MVC.Item.Views.partial.RuneDetails, i)</p>

                    @HtmlHelpers.PrintPvPIcon(i)
                    <span class="price">Price:  @TT.Domain.Procedures.ItemProcedures.GetCostOfItem(i, "sell") Arpeyjis</span>

                    <a href="@Url.Action(MVC.NPC.SellPet(i.Id))" class="attackLink">Sell</a>

                </div>

            </div>
        }
    }

    <div id="fullDetails"></div>

</div>