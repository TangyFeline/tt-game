@model IEnumerable<TT.Domain.Items.DTOs.ItemDetail>
@{
    ViewBag.Title = "Sell Pet";
}

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    <li><a href="@Url.Action(MVC.NPC.TradeWithPetMerchant())">Back to Purchase List</a></li>
}

<div class="containerInner">
    

    @{
        if (Model.Any() && Model.First().IsPermanent)
        {
            <p>You can sell your pet to Wuffie.  Wuffie will make sure <b>@Model.First().FormerPlayer.FullName</b> your <b>@Model.First().ItemSource.FriendlyName</b> is well taken care of until a new owner can be found for them!</p>
        }
        else if (Model.Any() && !Model.First().IsPermanent)
        {
            <p>While you have a pet, Wuffie only takes care of pets who have been permanently sealed in their new form.</p>
        }
        else
        {
            <p>You can sell your pet to Wuffie later.  Unfortunately you don't have a pet right now.</p>
        }
    }


    <hr />

    @{
        foreach (var item in Model.OrderByDescending(i => i.Level))
        {
            <h3>
                @{
            if (item.Level > 0)
            {
                <span>Level @item.Level</span>
            }
                }

                @item.ItemSource.FriendlyName <span> (@item.FormerPlayer.FullName)</span>
            </h3>
            <p>
                You will receive:  @TT.Domain.Procedures.ItemProcedures.GetCostOfItem(item, "sell") Arpeyjis
                <a href="@Url.Action(MVC.NPC.SellPet(item.Id))">Sell</a>
            </p>

            <hr />
        }
    }

</div>


