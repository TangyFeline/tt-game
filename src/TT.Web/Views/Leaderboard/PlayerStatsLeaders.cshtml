@model IEnumerable<TT.Domain.ViewModels.PlayerAchievementViewModel>
@using TT.Domain.Procedures
@{
    ViewBag.Title = "Statistics Leaders";
}

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
}

<div class="containerInner">

    <h1>Statistics Leaders</h1>
    
    <button class="btn" id="expandAllBtn" onclick="expandAll()">Expand All</button> <br><br>

    <div class="row">
        @{
            foreach (var f in TT.Domain.Procedures.StatsProcedures.StatTypesMap.Keys)
            {
                var ach = Model.FirstOrDefault(a => a.Achivement.AchievementType == f);
                if (ach != null)
                {
                    <div class="col-md-4 stats-leader">
                        <img src="~/Images/PvP/achievements/@StatsProcedures.StatTypesMap[f].ImageUrl" style="height:100px; width: 100px; margin: 3px; float:right;" />
                        <img src="@TT.Web.CustomHtmlHelpers.HtmlHelpers.GetImageURL(ach.Player, true)" style="height:100px; width: 100px; margin: 3px; float:left;" />
                        <h3 style="margin-top:110px !important;">@StatsProcedures.StatTypesMap[f].FriendlyName</h3>
                        <p><i>@StatsProcedures.StatTypesMap[f].Description:</i> <b>@String.Format("{0:n0}", ach.Achivement.Amount)</b></p>
                        <p>
                            <a href="@Url.Action(MVC.PvP.LookAtPlayer(ach.Player.Player.Id))">@ach.Player.Player.GetFullName()</a>

                            @Ajax.ActionLink("[+]", MVC.Settings.PlayerStatsTopOfType(ach.Achivement.AchievementType), new AjaxOptions { UpdateTargetId = "more_" + f, InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success('" + f + "')", OnFailure = "failure", OnBegin = "waiting" }, new { @class = "attackLink", @id = f })

                        </p>

                    <div id="more_@f">

                    </div>

                </div>
                }

            }
        }
    </div>

    <div id="topTypeList"></div>



</div>



<script>
    function success(panel) {
        var button = $("#" + panel);
        button.parent().parent().css("height", "484px");
        button.replaceWith("<p>------------------</p>");
    }

    function failure() {
        alert("Juderp!  Failed to contact server!");
    }

    function waiting() {
        // function must be present, intentionally blank
    }

    function expandAll() {
        $(".attackLink").each(function() {
            this.click();
        });
        $("#expandAllBtn").detach();
    }
</script>