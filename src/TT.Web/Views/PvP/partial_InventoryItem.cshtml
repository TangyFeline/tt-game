@model TT.Domain.ViewModels.ItemViewModel
           @using TT.Web.CustomHtmlHelpers
@using TT.Domain.Statics

<div class="col-md-2 col-sm-3 col-xs-6 charaBox">
    <div class="portrait" style="background-image: url(@CharactersHere.GetImageURL(Model, true));">
        @{
            if (Model.dbItem.Level > 0 && Model.Item.ItemType != PvPStatics.ItemType_Consumable)
            {
                <span class="icon icon-level"><b>@Model.dbItem.Level</b></span>
         
            }

            if (ViewBag.ShowDetailLinks != null && ViewBag.ShowDetailLinks)
            {
                @Ajax.ActionLink("[+]", MVC.Item.ShowItemDetails(Model.dbItem.Id), new AjaxOptions { UpdateTargetId = "fullDetails", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "detail_success", OnFailure = "detail_failure", OnBegin = "detail_wait" }, new { @class = "detailLink" })
            }
            
        }
        @CharactersHere.PrintItemTypeIcon(Model.Item)
        @CharactersHere.PrintSouledIcon(Model)
    </div>

    @{

        if (ViewBag.DisableLinks == null || ViewBag.DisableLinks == "false")
        {


            <div style="text-align: center;">
                <p>@Model.Item.FriendlyName</p>




                @{
            if (Model.Item.ItemType != PvPStatics.ItemType_Consumable && Model.Item.ItemType != PvPStatics.ItemType_Consumable_Reuseable && Model.Item.ItemType != PvPStatics.ItemType_Pet)
            {

                if (!Model.dbItem.IsEquipped)
                {
                    <a href="@Url.Action(MVC.PvP.Equip(Model.dbItem.Id, true))" class="attackLink">Wear</a>
                    <a href="@Url.Action(MVC.PvP.Drop(Model.dbItem.Id))" class="attackLink">Drop</a>
                }

                if (Model.dbItem.IsEquipped && !Model.dbItem.EquippedThisTurn)
                {
                    <a href="@Url.Action(MVC.PvP.Equip(Model.dbItem.Id, false))" class="attackLink">Take off</a>
                }

            }
            if (Model.Item.ItemType == PvPStatics.ItemType_Pet && (ViewBag.DisableReleaseLink == null || !ViewBag.DisableReleaseLink))
            {
                <a href="@Url.Action(MVC.PvP.Drop(Model.dbItem.Id))" class="attackLink">Release</a>
            }
            else if (Model.Item.ItemType == PvPStatics.ItemType_Consumable)
            {
                <a href="@Url.Action(MVC.PvP.Use(Model.dbItem.Id))" class="attackLink">Use</a>
                <a href="@Url.Action(MVC.PvP.Drop(Model.dbItem.Id))" class="attackLink">Drop</a>
            }
            else if (Model.Item.ItemType == PvPStatics.ItemType_Consumable_Reuseable)
            {

                if (Model.dbItem.TurnsUntilUse > 0)
                {
                    <span style="color: red;">Reuse in <b>@Model.dbItem.TurnsUntilUse</b> turns.</span>
                    <a href="@Url.Action(MVC.PvP.Drop(Model.dbItem.Id))" class="attackLink">Drop</a>
                }
                else
                {
                    <a href="@Url.Action(MVC.PvP.Use(Model.dbItem.Id))" class="attackLink">Use</a>
                    <a href="@Url.Action(MVC.PvP.Drop(Model.dbItem.Id))" class="attackLink">Drop</a>
                }


            }
                }

            </div>

        }

    }
</div>
    





    <style>
        .itemName {
            font-size: 20px;
            font-weight: bold;
        }

        .WasPerson {
            font-size: 15px;
            color: chocolate;
            font-style: italic;
        }

        .attackLink {
            text-align: center;
        }
    </style>
