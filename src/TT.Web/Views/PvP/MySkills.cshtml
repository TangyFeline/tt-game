@model TT.Web.ViewModels.MySkillsViewModel
@using TT.Domain.Statics
@{
    ViewBag.Title = "My Spells";
}

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    <li><a href="@Url.Action(MVC.Settings.ArchiveAllMySpells("true"))">Archive All My Spells</a></li>
    <li><a href="@Url.Action(MVC.Settings.ArchiveAllMySpells("false"))">Restore All My Spells</a></li>
    <li><a href="#" style="color: white !important; cursor: default">Known Spells (@Model.skills.Count() / @ViewBag.TotalLearnableSkills)</a></li>
}

<div class="containerInner">
    <div id="resultPrompt"></div>
    <table id="MySkills" class="table table-hover messageTable dt-responsive">
        <thead>
            <tr>
                <th>Spell Name</th>
                <th>Form Name</th>
                <th>Graphic</th>
                <th>Form Type</th>
                <th>Description</th>
                <th>Effect</th>
                <th>Archive</th>
            </tr>
            <tr>
                <th colspan="3"><select id="filtermobility" class="form-control"><option value="">Filter...</option></select></th>
                <th colspan="5">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var skill in Model.skills.OrderBy(s => s.SkillSource.FriendlyName))
                {
                    <tr>
                        <td class="playerMediatingNotification">
                            <b>@skill.SkillSource.FriendlyName</b>
                            @if (skill.IsArchived)
                            {
                                <b id="@skill.Id">(ARCHIVED)</b>
                            }
                            else
                            {
                                <b id="@skill.Id"></b>
                            }
                        </td>
                        <td class="formname">
                            @if (skill.SkillSource.FormSource != null)
                            {
                                <b>@skill.SkillSource.FormSource.FriendlyName</b>
                            }
                        </td>
                        <td>
                            @{
                                if (Model.ShouldDisplayGraphic(skill))
                                {
                                    <img width="100px" height="100px" src="@Model.GetGraphic(skill)">
                                }
                            }
                        </td>
                        <td class="mobilityClass">
                            @if (skill.SkillSource.MobilityType != null && skill.SkillSource.MobilityType == PvPStatics.MobilityInanimate)
                            {
                                <text>Inanimate</text>
                            }
                            else if (skill.SkillSource.MobilityType != null && skill.SkillSource.MobilityType == PvPStatics.MobilityPet)
                            {
                                <text>Animal/Familiar</text>
                            }
                            else if (skill.SkillSource.MobilityType != null && skill.SkillSource.MobilityType == "curse")
                            {
                                <text>Temporary curse</text>
                            }
                            else if (skill.SkillSource.MobilityType != null && skill.SkillSource.MobilityType == PvPStatics.MobilityMindControl)
                            {
                                <text>Temporary mind control</text>
                            }
                            else
                            {
                                <text>Animate</text>
                            }
                        </td>
                        <td class="tableCellDescription">@skill.SkillSource.Description</td>
                        @{
                            if (@skill.SkillSource.GivesEffectSource != null)
                            {
                                <td class="effect">@skill.SkillSource.GivesEffectSource.FriendlyName</td>
                            }
                            else
                            {
                                <td>N/A</td>
                            }
                        }
                        <td>
                            @if (skill.SkillSource.Id != PvPStatics.Spell_WeakenId)
                            {
                                @Ajax.ActionLink("[x]", MVC.Settings.ArchiveSpell(skill.SkillSource.Id), new AjaxOptions { UpdateTargetId = "resultPrompt", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "prompt_success", OnFailure = "prompt_failure", OnBegin = "prompt_wait" }, null)
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section head
{
    <style>

    .mobilityClass {
        color: darkblue;
        font-style: oblique;
        font-size: 14px;
    }

    .effect {
        color: darkolivegreen;
        font-weight: 900;
    }

    tr {
        border: 1px dashed rgb(161, 105, 105);
        text-align: center;
    }
</style>
}

@section scripts
{
    <script>
    $(document).ready(function () {
        $('#MySkills').dataTable({
            "orderCellsTop": true,
            "initComplete": function () {
                this.api().column(3).every(function () {
                    var column = this;
                    $("#filtermobility").on('change', function () {
                        var val = $.fn.dataTable.util.escapeRegex(
                            $(this).val()
                        );

                        column
                            .search(val ? '^' + val + '$' : '', true, false)
                            .draw();
                    });

                    column.data().unique().sort().each(function (d, j) {
                        $("#filtermobility").append('<option value="' + d + '">' + d + '</option>')
                    });
                });
            }
        });
    });

    function prompt_success() {
        var changeNumber = $("#changeNumber").text();

        if ($("#changeMessage").text().indexOf("archived") > 0) {
            $("#" + changeNumber).text("(ARCHIVED)");
        } else {
            $("#" + changeNumber).text("");
        }

    }

    function prompt_wait() {
        $("#resultPrompt").text("Contacting archive...");
    }


    </script>
}