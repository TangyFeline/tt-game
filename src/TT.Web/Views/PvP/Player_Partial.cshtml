@model TT.Domain.ViewModels.PlayerFormViewModel
@using TT.Web.CustomHtmlHelpers
@using TT.Domain.Procedures
@using TT.Domain.Statics

@{
    var HealthWidth = Convert.ToInt32(Model.Player.Health / Model.Player.MaxHealth * 100);
    if (HealthWidth > 100) { HealthWidth = 100; }
    var ManaWidth = Convert.ToInt32(Model.Player.Mana / Model.Player.MaxMana * 100);
    if (ManaWidth > 100) { ManaWidth = 100; }
    string gendercolor;
    if (Model.Player.Gender == PvPStatics.GenderMale)
    {
        gendercolor = "blue";
    }
    else if (Model.Player.Gender == PvPStatics.GenderFemale)
    {
        gendercolor = "purple";
    }
    else
    {
        gendercolor = "black";
    }

}

<div class="@HtmlHelpers.StyleIfBot(Model.Player.ToDbPlayer())" id="playnum-@Model.Player.Id">
    
    <div class="portrait" style="background-image: url(@HtmlHelpers.GetImageURL(Model, true));">
        
        <span class="icon icon-@Model.Player.Gender" style="float:right;"></span>
        <span class="icon icon-level"><b>@Model.Player.Level</b></span>
        <span class="portraitIconRP">@HtmlHelpers.PrintRPIcon(Model.Player.ToDbPlayer()) @HtmlHelpers.PrintPvPIcon(Model.Player.ToDbPlayer()) @HtmlHelpers.PrintMCIcon(Model.Player.ToDbPlayer()) @HtmlHelpers.PrintDonatorIcon(Model.Player.ToDbPlayer())</span>
        @{
            if (PlayerProcedures.PlayerIsOffline(Model.Player))
            {
                <span class="icon icon-sleep" title="This player is offline and cannot be attacked."></span>
            }
        }
    </div>

    <div class="charInfoWrapper">
        <span class="name">
            <span style="color: @gendercolor">
                <a href="@Url.Action(MVC.PvP.LookAtPlayer(Model.Player.Id))">@Model.Player.GetFullName()</a>
                @HtmlHelpers.PrintDuelIcon(Model.Player.ToDbPlayer())
                @HtmlHelpers.PrintQuestIcon(Model.Player.ToDbPlayer())
                <br />
                <span class="playerDescription">@Model.Form.FriendlyName</span>
            </span>
        </span><br />
        <span class="covBox">@HtmlHelpers.GetCovenantInfo(Model.Player.ToDbPlayer())</span>
        <div class="healthWrapper" title="@Model.Player.Health / @Model.Player.MaxHealth willpower">
            <div class="healthBar" style="width: @HealthWidth%"></div>
        </div>
        <div class="manaWrapper" title="@Model.Player.Mana / @Model.Player.MaxMana mana">
            <div class="manaBar" style="width: @ManaWidth%"></div>
        </div>
    </div>
</div>

