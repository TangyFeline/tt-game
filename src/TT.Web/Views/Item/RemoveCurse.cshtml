@model IEnumerable<TT.Domain.ViewModels.EffectViewModel2>

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
                <li><a href="@Url.Action(MVC.PvP.MyInventory())">Back to Inventory</a></li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div>
    <p class="infoMessage result"></p>
    <p class="infoMessage error"></p>
    <p class="infoMessage suberror"></p>
</div>

@*<div class="specialBox specialBox2">
        <p>...</p>
    </div>*@

<div class="containerInner">
    <h1>Remove a curse</h1>
    <p>You can use your Hex-B-Gone Moisturizer to remove one of the curses afflicting your body!  Which curse would you like to have removed?</p>

    @{
        foreach (TT.Domain.ViewModels.EffectViewModel2 effect in Model.OrderBy(x => x.Effect.FriendlyName))
        {
            <h3>@effect.Effect.FriendlyName (@effect.dbEffect.Duration turns of effect remaining)</h3>
            <a href="@Url.Action(MVC.Item.RemoveCurseSend(effect.dbEffect.dbName, (int)ViewBag.itemToUseId))">Remove this curse</a>
            <hr />
        }
    }

</div>