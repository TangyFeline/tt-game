@using TT.Domain.Statics
@model TT.Domain.ViewModels.AttachRuneListViewModel

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    <li><a href="@Url.Action(MVC.Item.MyInventory())">Back to Inventory</a></li>
}

<div class="containerInner">

    <h1>Attach Rune</h1>

    <p>You can attach runes on your equippable items to increase their power.</p>

    <p>You are attaching your <b>@Model.rune.ItemSource.FriendlyName</b> which can be attached to any eligible item or pet of level <b>@Model.rune.ItemSource.RuneLevel</b> or higher.</p>

    <table id="Items" class="table table-hover messageTable dt-responsive">
        <thead>
        <tr>
            <th></th>
            <th>Item Name</th>
            <th>Level</th>
            <th>Existing Runes</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @{
            foreach (var i in Model.items)
            {
                <tr>
                    <td><img width="100px" height="100px" src="@PortraitHelper.GetGraphicByItemType(i.ItemSource.ItemType, i.ItemSource.PortraitUrl, true)"/></td>
                    <td><b>@i.ItemSource.FriendlyName @i.PrintVictimName()</b></td>
                    <td>@i.Level</td>
                    <td>
                        
                        @{
                            foreach (var rune in i.Runes )
                            {
                                <p><b>@rune.ItemSource.FriendlyName</b></p>
                            }
                        }

                    </td>
                    <td>
                        @{
                            if (Model.CanAttachRune(i))
                            {
                                <a href="@Url.Action(MVC.Item.AttachRune(Model.rune.Id, i.Id))" class="attackLink">Attach</a>
                            }
                        }
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>



</div>

<script>
    $('#Items').dataTable({
        "lengthMenu": [[10, 50, 100, 200, -1], [10, 50, 100, 200, "All"]]
    });
</script>