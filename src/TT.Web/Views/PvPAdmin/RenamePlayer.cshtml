@model TT.Domain.ViewModels.PlayerNameViewModel

<script src="~/Scripts/jquery-ui-1.10.4.js"></script>

<div class="containerInner">

    <h1>Rename Player / Change Form</h1>

    <p>You can use this tool to rename a player, change their form (animate forms only), level, or Arpeyjis.  Some rules:</p>
    <ul class="listdots">
        <li>This tool only works in chaos mode.</li>
        <li>Do not use this to troll anyone. If they request you to do so, you <b>must restore their original name as soon as possible.</b></li>
        <li>Do not make any words so long that it cannot text wrap comfortably.</li>
        <li>If a player uses their boss form in a disruptive way such as it receieves complaints, their boss form must be revoked.</li>
        <li>You are under no obligation to fulfill requests.</li>
    </ul>

    @Ajax.ActionLink("Help", MVC.Info.AllForms(), new AjaxOptions { UpdateTargetId = "modal", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "launchModal", OnFailure = "launchLocationListModalFail" }, new { @class = "attackLink" })

    @using (Html.BeginForm(MVC.PvPAdmin.RenamePlayerSend(), FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <span>Id:</span>
        @Html.TextAreaFor(m => m.Id)<br><br>

        <span>FirstName:</span>
        @Html.TextAreaFor(m => m.NewFirstName)<br><br>

        <span>LastName:</span>
        @Html.TextAreaFor(m => m.NewLastName)<br><br>

        <span>Form Source Id:</span>
        @Html.TextBoxFor(m => m.NewFormSourceId, new { @type = "number" })<br><br>

        <span>Level:</span>
        @Html.TextAreaFor(m => m.Level)<br><br>

        <span>Arpeyjis:</span>
        @Html.TextAreaFor(m => m.Money)<br><br>

        <input type="submit" value="Send">
    }

    <div id="modal" style="display: none;" class="ui-widget-content ui-draggable helpModal">LOCATIONS: </div>

</div>

<script>
    function launchModal() {
        $("#modal").show();
    }
</script>
