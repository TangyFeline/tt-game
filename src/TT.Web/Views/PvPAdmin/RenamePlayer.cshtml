@model TT.Domain.ViewModels.PlayerNameViewModel

<div class="containerInner">

    <h1>Chaos Actions</h1>

    <p>You can use this tool to rename a player, change their form (animate forms only), level, or Arpeyjis.  Some rules:</p>
    <ul class="listdots">
        <li>This tool only works in chaos mode.</li>
        <li>Do not use this to troll anyone. If they request you to do so, you <b>must restore their original name as soon as possible.</b></li>
        <li>Do not make any words so long that it cannot text wrap comfortably.</li>
        <li>If a player uses their boss form in a disruptive way such as it receieves complaints, their boss form must be revoked.</li>
        <li>You are under no obligation to fulfill requests.</li>
    </ul>

    @Ajax.ActionLink("Help", MVC.Info.AllForms(), new AjaxOptions { UpdateTargetId = "modal", InsertionMode = InsertionMode.Replace, HttpMethod = "GET" }, new { @class = "attackLink" })

    @using (Html.BeginForm(MVC.PvPAdmin.RenamePlayerSend(), FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)

        <span>Player Id:</span>
        @Model.Id<br><br>

        <span>First Name:</span>
        @Html.TextBoxFor(m => m.NewFirstName)<br><br>

        <span>Last Name:</span>
        @Html.TextBoxFor(m => m.NewLastName)<br><br>

        <span>Form Source Id:</span>
        @Html.TextBoxFor(m => m.NewFormSourceId, new { @type = "number" })<br><br>

        <span>Level:</span>
        @Html.TextBoxFor(m => m.Level, new { id = "level", @class = "checkInt" })<br><br>

        <span>Arpeyjis:</span>
        @Html.TextBoxFor(m => m.Money, new { id = "money", @class = "checkInt" })<br><br>

        <input type="submit" value="Send">
    }

    <div id="modal" class="helpModal"></div>

</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".checkInt").focusout(function () {

                // Get the values of each box.
                var levelValue = parseInt($("#level").val());
                var moneyValue = parseInt($("#money").val());

                // Check for values over max and set accordingly.
                if (levelValue > 999999999)
                {
                    $("#level").val("999999999");
                }

                if (moneyValue > 999999999) {
                    $("#money").val("999999999");
                }
            })
        });
    </script>
}