@model TT.Domain.Models.JewdewfaeEncounter



@using (Html.BeginForm(MVC.PvPAdmin.WriteFaeSend(), FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="messageInfoContainer clearfix">
        Writing to <span class="messageNicknameContainer">@ViewBag.SendingToName</span>:
        <span class="charCounter" id="textRemaining"></span>
    </div>

    @Ajax.ActionLink("Show Locations", MVC.Info.AllLocations(), new AjaxOptions { UpdateTargetId = "help", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "", OnFailure = "" }, new { @class = "attackLink" })
    @Ajax.ActionLink("Show Forms", MVC.Info.AllForms(), new AjaxOptions { UpdateTargetId = "help", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "launchModal", OnFailure = "launchLocationListModalFail" }, new { @class = "attackLink" })


    <div id="help"></div>

    @Html.Raw(ViewBag.LocationExists)<br />
    @Html.Raw(ViewBag.FormExists)<br />

    <span>Location</span><br />
    @Html.TextBoxFor(m => m.dbLocationName)<br />


    <span>Required Form</span><br />
    @Html.TextBoxFor(m => m.RequiredForm)<br />

    <span>Intro text:</span><br />
    @Html.TextAreaFor(m => m.IntroText)<br />

    <span>Failure text:</span><br />
    @Html.TextAreaFor(m => m.FailureText)<br />

    <span>Completion text:</span><br />
    @Html.TextAreaFor(m => m.CorrectFormText)<br />

    <span>Is live:</span>
    @Html.CheckBoxFor(m => m.IsLive)<br />

    @Html.HiddenFor(m => m.Id)

    <br />
    <input type="submit" class="btn btn-chat" value="Send" />

}

<div class="textSpaced">

    <hr />
    <h3>Intro</h3>
    @Html.Raw(ViewBag.IntroText)


    <h3>Failure</h3>
    @Html.Raw(ViewBag.FailureText)

    <h3>Correct</h3>
    @Html.Raw(ViewBag.CorrectFormText)



</div>

<style>
    .faevoice, fae {
        color: darkviolet;
    }

    input {
        width: 100%;
    }

    textarea {
        width: 100%;
        height: 200px;
    }
</style>