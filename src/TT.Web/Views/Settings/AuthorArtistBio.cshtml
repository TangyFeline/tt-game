@using TT.Domain.Statics
@model TT.Domain.Models.AuthorArtistBio
@{
    ViewBag.Title = "Author / Artist Biography";
}
@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
}

<div class="textBio">
    <p class="bioTitle">Author / Artist Biography</p>
    <p class="bioDesc">@ViewBag.IngameCharacter <br>
    <span class="timeago">Last updated @Model.LastUpdated</span>
    </p>
    
    @{
        if (!Model.OtherNames.IsNullOrEmpty())
        {
            <p class="bioTitle">Common Names</p>
            <p class="bioDesc">@Model.OtherNames</p>
        }
}

    @{
        if (!Model.Email.IsNullOrEmpty())
        {
            <p class="bioTitle">Email</p>
    <p class="bioDesc">@Model.Email</p>
        }
}

    <p class="bioTitle">Commission Information</p>
    <p class="bioDesc">
    @{
        if (@Model.AcceptingComissions != null && @Model.AcceptingComissions == 0)
        {
            <span class="bad">This artist does not take commissions.</span>
        }
        else if (@Model.AcceptingComissions != null && @Model.AcceptingComissions == 1)
        {
            <span class="good">This artist is always open for commissions!</span>
        }
        else if (@Model.AcceptingComissions != null && @Model.AcceptingComissions == 2)
        {
            <span class="bad">This artist normally takes commissions but they are currently closed.</span>
        }
        else if (@Model.AcceptingComissions != null && @Model.AcceptingComissions == 3)
        {
            <span class="bad">This artist does not take commissions but plans to in the future.</span>
        }

    }
    </p>
    @{
        if (!Model.Url1.IsNullOrEmpty())
        {
            <p class="bioTitle">Primary website</p>
    <p class="bioDesc"><a href="@Model.Url1">@Model.Url1</a></p>
        }
}

    @{
        if (!Model.Url2.IsNullOrEmpty())
        {
            <p class="bioTitle">Secondary website</p>
    <p class="bioDesc"><a href="@Model.Url2">@Model.Url2</a></p>
        }
}

    @{
        if (!Model.Url3.IsNullOrEmpty())
        {
            <p class="bioTitle">Other website</p>
    <p class="bioDesc"><a href="@Model.Url3">@Model.Url3</a></p>
        }
}


    @{
        if (!Model.Text.IsNullOrEmpty())
        {
            <p class="bioTitle">More About this Artist!</p>
    <p class="bioDesc">@Html.Raw(Model.Text)</p>
        }
}

    <p class="bioTitle">Animate Graphics</p>
    <p class="bioDesc">
                @{
                    if (Model.AnimateImages != null)
                    {
                        IEnumerable<string> animateGraphics = Model.AnimateImages.Split(';');
                        foreach (var s in animateGraphics.Where(s => s.Length > 0))
                        {
                            var strThumb = "";
                            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + PvPStatics.ImageFolder + "portraits/Thumbnails/100/"+s))
                            {
                                strThumb = "Thumbnails/100/";
                            }
                            <a href="https://images.transformaniatime.com/portraits/@s" onclick="return popitup('https://images.transformaniatime.com/portraits/@s')">
                                <img src="https://images.transformaniatime.com/portraits/@strThumb@s" class="bioDescImg">
                            </a>
                        }
                    }
                }
    </p>

    <p class="bioTitle">Inanimate Graphics</p>
    <p class="bioDesc">
                @{
                    if (Model.InanimateImages != null)
                    {
                        IEnumerable<string> inanimateGraphics = Model.InanimateImages.Split(';');
                        foreach (var s in inanimateGraphics.Where(s => s.Length > 0))
                        {
                            var strThumb = "";
                            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + PvPStatics.ImageFolder + "itemsPortraits/Thumbnails/100/" + s))
                            {
                                strThumb = "Thumbnails/100/";
                            }
                            <a href="https://images.transformaniatime.com/itemsPortraits/@s" onclick="return popitup('https://images.transformaniatime.com/itemsPortraits/@s')">
                                <img src="https://images.transformaniatime.com/itemsPortraits/@strThumb@s" class="bioDescImg">
                            </a>
                        }
                    }
                }
</p>
<p class="bioTitle">Animal Graphics</p>
    <p class="bioDesc">
                @{
                    if (Model.AnimalImages != null)
                    {
                        IEnumerable<string> animalGraphics = Model.AnimalImages.Split(';');
                        foreach (var s in animalGraphics.Where(s => s.Length > 0))
                        {
                            var strThumb = "";
                            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + PvPStatics.ImageFolder + "animalPortraits/Thumbnails/100/" + s))
                            {
                                strThumb = "Thumbnails/100/";
                            }
                            <a href="https://images.transformaniatime.com/animalPortraits/@s" onclick="return popitup('https://images.transformaniatime.com/animalPortraits/@s')">
                                <img src="https://images.transformaniatime.com/animalPortraits/@strThumb@s" class="bioDescImg">
                            </a>
                        }
                    }
                }
</p>
</div>

@section scripts
{
    <script>
    function popitup(url) {
        newwindow=window.open(url,'name','height=600,width=600');
        if (window.focus) {newwindow.focus()}
        return false;
    }
    </script>
}
