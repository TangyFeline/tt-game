@model IEnumerable<TT.Domain.ViewModels.BlacklistEntryViewModel>
@{
    ViewBag.Title = "Player Blacklist";
}

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
}

<div class="containerInner">

    <p>You can update or remove the entries for players on your blacklist here.</p>

    <hr />

    @foreach (var m in Model)
    {

        if (m.PlayerId > 0)
        {
            <b><a href="@Url.Action(MVC.PvP.LookAtPlayer(m.PlayerId))">@m.PlayerName</a>:  </b>

            if (@m.dbBlacklistEntry.BlacklistLevel == 0)
            {
                <span>No attacking</span>
            }
            else if (@m.dbBlacklistEntry.BlacklistLevel == 1)
            {
                <span>No attacking or messaging</span>
            }

            <br />
            <a href="@Url.Action(MVC.Settings.ChangeBlacklistType(m.dbBlacklistEntry.Id, m.PlayerId, "noAttackOrMessage"))">Set No attacking OR messaging</a>
            <br />
            <a href="@Url.Action(MVC.Settings.ChangeBlacklistType(m.dbBlacklistEntry.Id, m.PlayerId, "noAttackOnly"))">Set No attacking but ALLOW messaging</a>
            <br />

            if (m.PlayerId > 0)
            {
                <a href="@Url.Action(MVC.Settings.ToggleBlacklistOnPlayer(m.PlayerId))">Remove blacklist entry</a>
            }


        }


        else
        {
            <b>@m.PlayerName</b>
        }



        <hr />
    }

</div>