@model IEnumerable<TT.Domain.ViewModels.BlacklistEntryViewModel>

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div>
    <p class="infoMessage result"></p>
    <p class="infoMessage error"></p>
    <p class="infoMessage suberror"></p>
</div>

<div class="containerInner">

    <p>You can update or remove the entries for players on your blacklist here.</p>

    <hr />

    @foreach (TT.Domain.ViewModels.BlacklistEntryViewModel m in Model)
    {

        if (m.PlayerId > 0)
        {
            <b><a href="@Url.Action(MVC.PvP.LookAtPlayer(m.PlayerId))">@m.PlayerName</a>:  </b>

            if (@m.dbBlacklistEntry.BlacklistLevel == 0)
            {
                <span>No attacking</span>
            }
            else if (@m.dbBlacklistEntry.BlacklistLevel == 1)
            {
                <span>No attacking or messaging</span>
            }

            <br />
            <a href="@Url.Action(MVC.Settings.ChangeBlacklistType(m.dbBlacklistEntry.Id, m.PlayerId, "noAttackOrMessage"))">Set No attacking OR messaging</a>
            <br />
            <a href="@Url.Action(MVC.Settings.ChangeBlacklistType(m.dbBlacklistEntry.Id, m.PlayerId, "noAttackOnly"))">Set No attacking but ALLOW messaging</a>
            <br />

            if (m.PlayerId > 0)
            {
                <a href="@Url.Action(MVC.Settings.ToggleBlacklistOnPlayer(m.PlayerId))">Remove blacklist entry</a>
            }


        }


        else
        {
            <b>@m.PlayerName</b>
        }



        <hr />
    }

</div>