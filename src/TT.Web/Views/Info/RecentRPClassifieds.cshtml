@model IEnumerable<TT.Domain.ClassifiedAds.DTOs.RPClassifiedAdAndPlayerDetail>

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", MVC.PvP.Play())</li>
                <li>@Html.ActionLink("My RP Classified Ads", MVC.Settings.MyRPClassifiedAds())</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div>
    <p class="infoMessage result">@TempData["Result"]</p>
    <p class="infoMessage error">@TempData["Error"]</p>
    <p class="infoMessage suberror">@TempData["SubError"]</p>
</div>


<div class="containerInner">
    <h1>Recent RP Classified Ads</h1>
    <p style="margin: 20px 0px; text-align: center;">Looking for an RP partner?  On this page you will find all recent RP Classified Ad postings that have been updated within the past 3 days.</p>

    <div class="row">
        @foreach (var ad in Model.OrderByDescending(m => m.RPClassifiedAd.RefreshTimestamp))
        {
            var player = ad.Players.FirstOrDefault();

            <div class="col-xs-12 col-md-3 rp-ad textSpaced">
                <p>
                    <i><b><u>@ad.RPClassifiedAd.Title</u></b></i>
                </p>
                <p>
                @if (player != null)
                {
                    <span style="font-size: 10px; color: grey">By:</span>
                    <span style="font-size: 11px;">
                        @(string.Format("{0} {1}{2}",
                            player.FirstName,
                            (player.DonatorLevel >= 2 && !player.Nickname.IsNullOrEmpty() ? "'" + player.Nickname + "' " : ""),
                            player.LastName))
                    </span>
                }
                else
                {
                    <span style="font-size: 10px; color: grey">The owner of this ad hadn't made a character yet</span>
                }
                </p>
                <p>
                    <b>Description</b><br />
                    <i>@ad.RPClassifiedAd.Text</i>
                </p>
                <p>
                    <span class="good">Desired themes</span><br />
                    @ad.RPClassifiedAd.YesThemes
                </p>
                <p>
                    <span class="bad">Undesired themes</span><br />
                    @ad.RPClassifiedAd.NoThemes
                </p>
                <p>
                    <span class="timeago">Availability / Timezones</span><br />
                    @ad.RPClassifiedAd.PreferredTimezones
                </p>
                <p class="timeago">
                    Created @TT.Web.CustomHtmlHelpers.CharactersHere.DatetimeToTimeago(ad.RPClassifiedAd.CreationTimestamp)<br />
                    Last Refreshed @TT.Web.CustomHtmlHelpers.CharactersHere.DatetimeToTimeago(ad.RPClassifiedAd.RefreshTimestamp)
                </p>

                @if (player != null)
                {
                    <p>@Html.ActionLink("Look at Ad Poster", MVC.PvP.LookAtPlayer(player.Id))</p>
                }

                @if (User.IsInRole(TT.Domain.Statics.PvPStatics.Permissions_Admin) || User.IsInRole(TT.Domain.Statics.PvPStatics.Permissions_Moderator))
                {
                    <p>@Html.ActionLink("Delete for Violation", MVC.PvPAdmin.ModDeleteClassified(ad.RPClassifiedAd.Id))</p>
                }

            </div>
        }
    </div>
</div>