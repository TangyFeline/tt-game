@model IEnumerable<TT.Domain.Models.NewsPost>
@using TT.Domain.Statics

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
                <li>@Html.ActionLink("Planned Game Features", "GameNews_PlannedFeatures", "Info")</li>
                <li>@Html.ActionLink("News", "GameNews", "Info")</li>
                <li>@Html.ActionLink("Rules of Play", "Rules", "Info")</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>
<div class="containerInner textSpaced">
    <h1>Archived Updates, News, and Announcements</h1>
    @{
        foreach (var n in Model)
        {
            if (User.IsInRole(PvPStatics.Permissions_Admin))
            {
                @Html.ActionLink("[Edit]", "EditNewsPost", "PvPAdmin", new { n.Id }, new { @class = "bad" })
            }
            <p>@n.Timestamp.ToString("MMMM d")</p>
            @Html.Raw(n.Text)
            <hr />
        }
    }
</div>