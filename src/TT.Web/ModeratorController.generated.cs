// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;
namespace TT.Web.Controllers
{
    public partial class ModeratorController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ModeratorController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ModeratorController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewStrikes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewStrikes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddStrike()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddStrike);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HandleReport()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HandleReportSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReportSend);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ModeratorController Actions { get { return MVC.Moderator; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "moderator";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "moderator";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string ViewAbusiveMessages = ("ViewAbusiveMessages").ToLowerInvariant();
            public readonly string ViewStrikes = ("ViewStrikes").ToLowerInvariant();
            public readonly string AddStrike = ("AddStrike").ToLowerInvariant();
            public readonly string ViewReports = ("ViewReports").ToLowerInvariant();
            public readonly string HandleReport = ("HandleReport").ToLowerInvariant();
            public readonly string HandleReportSend = ("HandleReportSend").ToLowerInvariant();
        }


        static readonly ActionParamsClass_ViewStrikes s_params_ViewStrikes = new ActionParamsClass_ViewStrikes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewStrikes ViewStrikesParams { get { return s_params_ViewStrikes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewStrikes
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_AddStrike s_params_AddStrike = new ActionParamsClass_AddStrike();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddStrike AddStrikeParams { get { return s_params_AddStrike; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddStrike
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_HandleReport s_params_HandleReport = new ActionParamsClass_HandleReport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HandleReport HandleReportParams { get { return s_params_HandleReport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HandleReport
        {
            public readonly string reportId = ("reportId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_HandleReportSend s_params_HandleReportSend = new ActionParamsClass_HandleReportSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HandleReportSend HandleReportSendParams { get { return s_params_HandleReportSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HandleReportSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string HandleReport = "HandleReport";
                public readonly string Index = "Index";
                public readonly string ViewAbusiveMessages = "ViewAbusiveMessages";
                public readonly string ViewReports = "ViewReports";
                public readonly string ViewStrikes = "ViewStrikes";
            }
            public readonly string HandleReport = "~/Views/Moderator/HandleReport.cshtml";
            public readonly string Index = "~/Views/Moderator/Index.cshtml";
            public readonly string ViewAbusiveMessages = "~/Views/Moderator/ViewAbusiveMessages.cshtml";
            public readonly string ViewReports = "~/Views/Moderator/ViewReports.cshtml";
            public readonly string ViewStrikes = "~/Views/Moderator/ViewStrikes.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ModeratorController : TT.Web.Controllers.ModeratorController
    {
        public T4MVC_ModeratorController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ViewAbusiveMessagesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewAbusiveMessages()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewAbusiveMessages);
            ViewAbusiveMessagesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ViewStrikesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewStrikes(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewStrikes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ViewStrikesOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AddStrikeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.AddStrikeViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddStrike(TT.Domain.ViewModels.AddStrikeViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddStrike);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            AddStrikeOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void ViewReportsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewReports()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewReports);
            ViewReportsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void HandleReportOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int reportId);

        [NonAction]
        public override System.Web.Mvc.ActionResult HandleReport(int reportId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportId", reportId);
            HandleReportOverride(callInfo, reportId);
            return callInfo;
        }

        [NonAction]
        partial void HandleReportSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.Identity.DTOs.ReportDetail input);

        [NonAction]
        public override System.Web.Mvc.ActionResult HandleReportSend(TT.Domain.Identity.DTOs.ReportDetail input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReportSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            HandleReportSendOverride(callInfo, input);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
