// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;
namespace TT.Web.Controllers
{
    public partial class InfoController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InfoController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected InfoController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InfoController Actions { get { return MVC.Info; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "info";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "info";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string FAQ = ("FAQ").ToLowerInvariant();
            public readonly string HowToPlay = ("HowToPlay").ToLowerInvariant();
            public readonly string Rules = ("Rules").ToLowerInvariant();
            public readonly string GameNews_PlannedFeatures = ("GameNews_PlannedFeatures").ToLowerInvariant();
            public readonly string GameNews = ("GameNews").ToLowerInvariant();
            public readonly string GameNews_Archive = ("GameNews_Archive").ToLowerInvariant();
            public readonly string RecentRPClassifieds = ("RecentRPClassifieds").ToLowerInvariant();
            public readonly string AllLocations = ("AllLocations").ToLowerInvariant();
            public readonly string AllForms = ("AllForms").ToLowerInvariant();
            public readonly string AllItems = ("AllItems").ToLowerInvariant();
            public readonly string ServerPopulation = ("ServerPopulation").ToLowerInvariant();
            public readonly string ServerPopulationJson = ("ServerPopulationJson").ToLowerInvariant();
            public readonly string GearTool = ("GearTool").ToLowerInvariant();
            public readonly string Gear = ("Gear").ToLowerInvariant();
            public readonly string StartingForms = ("StartingForms").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AllForms = "AllForms";
                public readonly string AllItems = "AllItems";
                public readonly string AllLocations = "AllLocations";
                public readonly string FAQ = "FAQ";
                public readonly string GameNews = "GameNews";
                public readonly string GameNews_Archive = "GameNews_Archive";
                public readonly string GameNews_PlannedFeatures = "GameNews_PlannedFeatures";
                public readonly string GearTool = "GearTool";
                public readonly string HowToPlay = "HowToPlay";
                public readonly string RecentRPClassifieds = "RecentRPClassifieds";
                public readonly string Rules = "Rules";
                public readonly string ServerPopulation = "ServerPopulation";
            }
            public readonly string AllForms = "~/Views/Info/AllForms.cshtml";
            public readonly string AllItems = "~/Views/Info/AllItems.cshtml";
            public readonly string AllLocations = "~/Views/Info/AllLocations.cshtml";
            public readonly string FAQ = "~/Views/Info/FAQ.cshtml";
            public readonly string GameNews = "~/Views/Info/GameNews.cshtml";
            public readonly string GameNews_Archive = "~/Views/Info/GameNews_Archive.cshtml";
            public readonly string GameNews_PlannedFeatures = "~/Views/Info/GameNews_PlannedFeatures.cshtml";
            public readonly string GearTool = "~/Views/Info/GearTool.cshtml";
            public readonly string HowToPlay = "~/Views/Info/HowToPlay.cshtml";
            public readonly string RecentRPClassifieds = "~/Views/Info/RecentRPClassifieds.cshtml";
            public readonly string Rules = "~/Views/Info/Rules.cshtml";
            public readonly string ServerPopulation = "~/Views/Info/ServerPopulation.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_InfoController : TT.Web.Controllers.InfoController
    {
        public T4MVC_InfoController() : base(Dummy.Instance) { }

        [NonAction]
        partial void FAQOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult FAQ()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FAQ);
            FAQOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void HowToPlayOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult HowToPlay()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HowToPlay);
            HowToPlayOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RulesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Rules()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Rules);
            RulesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GameNews_PlannedFeaturesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GameNews_PlannedFeatures()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GameNews_PlannedFeatures);
            GameNews_PlannedFeaturesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GameNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GameNews()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GameNews);
            GameNewsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GameNews_ArchiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GameNews_Archive()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GameNews_Archive);
            GameNews_ArchiveOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RecentRPClassifiedsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RecentRPClassifieds()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RecentRPClassifieds);
            RecentRPClassifiedsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AllLocationsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AllLocations()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AllLocations);
            AllLocationsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AllFormsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AllForms()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AllForms);
            AllFormsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AllItemsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AllItems()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AllItems);
            AllItemsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ServerPopulationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ServerPopulation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ServerPopulation);
            ServerPopulationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ServerPopulationJsonOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult ServerPopulationJson()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ServerPopulationJson);
            ServerPopulationJsonOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GearToolOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GearTool()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GearTool);
            GearToolOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GearOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Gear()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Gear);
            GearOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void StartingFormsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult StartingForms()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StartingForms);
            StartingFormsOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
