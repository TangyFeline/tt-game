@model IEnumerable<tfgame.dbModels.Models.PollEntry>

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
                <li>@Html.ActionLink("View All Polls", "ViewPolls", "Settings")</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>
<div class="containerInner text-center">
    @{
        decimal totalCount = Model.Count();

        decimal Num1_Choice1 = Model.Where(m => m.Num1 == 1).Count() / totalCount * 100;
        decimal Num1_Choice2 = Model.Where(m => m.Num1 == 2).Count() / totalCount * 100;
        decimal Num1_Choice3 = Model.Where(m => m.Num1 == 3).Count() / totalCount * 100;
        decimal Num1_Choice4 = Model.Where(m => m.Num1 == 4).Count() / totalCount * 100;
        decimal Num1_Choice5 = Model.Where(m => m.Num1 == 5).Count() / totalCount * 100;
        decimal Num1_Choice6 = Model.Where(m => m.Num1 == 6).Count() / totalCount * 100;
        decimal Num1_Choice7 = Model.Where(m => m.Num1 == 7).Count() / totalCount * 100;

        decimal Num2_Choice1 = Model.Where(m => m.Num2 == 1).Count() / totalCount * 100;
        decimal Num2_Choice2 = Model.Where(m => m.Num2 == 2).Count() / totalCount * 100;
        decimal Num2_Choice3 = Model.Where(m => m.Num2 == 3).Count() / totalCount * 100;
        decimal Num2_Choice4 = Model.Where(m => m.Num2 == 4).Count() / totalCount * 100;
        decimal Num2_Choice5 = Model.Where(m => m.Num2 == 5).Count() / totalCount * 100;
        decimal Num2_Choice6 = Model.Where(m => m.Num2 == 6).Count() / totalCount * 100;
        decimal Num2_Choice7 = Model.Where(m => m.Num2 == 7).Count() / totalCount * 100;

        decimal Num3_Choice1 = Model.Where(m => m.Num3 == 1).Count() / totalCount * 100;
        decimal Num3_Choice2 = Model.Where(m => m.Num3 == 2).Count() / totalCount * 100;
        decimal Num3_Choice3 = Model.Where(m => m.Num3 == 3).Count() / totalCount * 100;
        decimal Num3_Choice4 = Model.Where(m => m.Num3 == 4).Count() / totalCount * 100;
        decimal Num3_Choice5 = Model.Where(m => m.Num3 == 5).Count() / totalCount * 100;
        decimal Num3_Choice6 = Model.Where(m => m.Num3 == 6).Count() / totalCount * 100;
        decimal Num3_Choice7 = Model.Where(m => m.Num3 == 7).Count() / totalCount * 100;

        decimal Num4_Choice1 = Model.Where(m => m.Num4 == 1).Count() / totalCount * 100;
        decimal Num4_Choice2 = Model.Where(m => m.Num4 == 2).Count() / totalCount * 100;
        decimal Num4_Choice3 = Model.Where(m => m.Num4 == 3).Count() / totalCount * 100;
        decimal Num4_Choice4 = Model.Where(m => m.Num4 == 4).Count() / totalCount * 100;
        decimal Num4_Choice5 = Model.Where(m => m.Num4 == 5).Count() / totalCount * 100;
        decimal Num4_Choice6 = Model.Where(m => m.Num4 == 6).Count() / totalCount * 100;
        decimal Num4_Choice7 = Model.Where(m => m.Num4 == 7).Count() / totalCount * 100;

        decimal Num5_Choice1 = Model.Where(m => m.Num5 == 1).Count() / totalCount * 100;
        decimal Num5_Choice2 = Model.Where(m => m.Num5 == 2).Count() / totalCount * 100;
        decimal Num5_Choice3 = Model.Where(m => m.Num5 == 3).Count() / totalCount * 100;

    }
    <h1>How open are you about your transformation or fetish interests to friends and family?</h1>

    <hr />
    <h3>This poll received @Model.Count() responses.</h3>

    <i>Percentages may not add up to 100% as all fields are optional; any remaining percent can be attributed to 'no response' entries.</i>

    <hr />

    <p><b>How open are you about your transformation or general fetish interests to friends and family?<</b></p>

    <p>Very open; I tell most anyone I meet:  <b>@Math.Round(Num1_Choice1, 1) %</b></p>

    <p>Somewhat open; I tell friends and family: <b>@Math.Round(Num1_Choice2, 1) %</b></p>

    <p>Somewhat reserved; I tell only my closest friends and family whom I generally trust:  <b>@Math.Round(Num1_Choice3, 1) %</b></p>

    <p>Very reserved; I have told very few people whom I trust very closely:  <b>@Math.Round(Num1_Choice4, 1) %</b></p>

    <p>Extremely reserved; I have not told anyone nor plan to in the near future:  <b>@Math.Round(Num1_Choice5, 1) %</b></p>



    <hr />

    <p><b>Would you / have you met up with someone in real life whom you met from Transformania Time or another adult/fetish site?</b></p>

    <p>I have already met more than two people and am willing to meet more:  <b>@Math.Round(Num2_Choice1, 1) %</b></p>

    <p>I have met one or two people and am willing to meet more:  <b>@Math.Round(Num2_Choice2, 1) %</b></p>

    <p>I have not met anyone but am willing to meet some:  <b>@Math.Round(Num2_Choice3, 1) %</b></p>

    <p>I have not met anyone and am somewhat unwilling to meet some:  <b>@Math.Round(Num2_Choice4, 1) %</b></p>

    <p>I have not met anyone and would never meet anyone:  <b>@Math.Round(Num2_Choice5, 1) %</b></p>


    <hr />


    <p><b>Tell about the first time you talked to a friend or family member about your transformation interests, if any.</b></p>

    @{
        foreach (tfgame.dbModels.Models.PollEntry e in Model.Where(p => p.String1 != null && p.String1 != ""))
        {
            <p>"@e.String1"</p><br />
        }
    }

    <hr />

    <p><b>If you <b class="good">DO</b> want or <b class="good">ALREADY HAVE</b> met with anyone from TT or another adult/fetish site, what are/were your reasons?</b></p>

    @{
        foreach (tfgame.dbModels.Models.PollEntry e in Model.Where(p => p.String2 != null && p.String2 != ""))
        {
            <p>"@e.String2"</p><br />
        }
    }

    <p><b>If you <b class="bad">DO NOT</b> want to meet with anyone from TT or another adult/fetish site, what are your reasons?</b></p>

    @{
        foreach (tfgame.dbModels.Models.PollEntry e in Model.Where(p => p.String3 != null && p.String3 != ""))
        {
            <p>"@e.String3"</p><br />
        }
    }

    <p><b>Leave any other thoughts you think might be relevant to this poll.</b></p>

    @{
        foreach (tfgame.dbModels.Models.PollEntry e in Model.Where(p => p.String4 != null && p.String4 != ""))
        {
            <p>"@e.String4"</p><br />
        }
    }



</div>
