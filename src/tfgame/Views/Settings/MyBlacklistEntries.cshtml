@model IEnumerable<tfgame.ViewModels.BlacklistEntryViewModel>

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
                <li>...</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div>
    <p class="infoMessage result">...</p>
    <p class="infoMessage error">...</p>
    <p class="infoMessage suberror">...</p>
</div>

<div class="specialBox specialBox2">
    <p>...</p>
</div>

<div class="containerInner">

    <p>You can update or remove the entries for players on your blacklist here.</p>

    <hr />

    @foreach (tfgame.ViewModels.BlacklistEntryViewModel m in Model)
    {

        if (m.PlayerId > 0)
        {
            <b>@Html.ActionLink(m.PlayerName, "LookAtPlayer", "PvP", new { id = m.PlayerId }, null):  </b>

            if (@m.dbBlacklistEntry.BlacklistLevel == 0)
            {
                <span>No attacking</span>
            }
            else if (@m.dbBlacklistEntry.BlacklistLevel == 1)
            {
                <span>No attacking or messaging</span>
            }

            <br />
            @Html.ActionLink("Set No attacking OR messaging", "ChangeBlacklistType", "Settings", new { id = m.dbBlacklistEntry.Id, playerId = m.PlayerId, type = "noAttackOrMessage" }, null)
            <br />
            @Html.ActionLink("Set No attacking but ALLOW messaging", "ChangeBlacklistType", "Settings", new { id = m.dbBlacklistEntry.Id, playerId = m.PlayerId, type = "noAttackOnly" }, null)
            <br />

            if (m.PlayerId > 0)
            {
                @Html.ActionLink("Remove blacklist entry", "ToggleBlacklistOnPlayer", "Settings", new { id = m.PlayerId }, null)
            }


        }


        else
        {
            <b>@m.PlayerName</b>
        }



        <hr />
    }

</div>