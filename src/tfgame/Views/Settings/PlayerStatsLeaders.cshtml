@model IEnumerable<tfgame.ViewModels.PlayerAchievementViewModel>
@using tfgame.Procedures
@using tfgame.ViewModels

<nav class="navbar navbar-default outsideContainer navbarTT2">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Back to game", "Play", "PvP")</li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>


<div class="containerInner">

    <h1>Statistics Leaders</h1>
    <div class="row">
        @{
            foreach (string f in tfgame.Procedures.StatsProcedures.StatTypesMap.Keys)
            {
                PlayerAchievementViewModel ach = Model.FirstOrDefault(a => a.Achivement.AchievementType == f);
                if (ach != null)
                {
                    <div class="col-md-4 stats-leader" style="height: auto;">
                        <img src="~/Images/PvP/Icons/@StatsProcedures.StatTypesMap[f].ImageUrl" style="height:100px; width: 100px; margin: 3px; float:right;" />
                        <img src="@tfgame.CustomHtmlHelpers.CharactersHere.GetImageURL(ach.Player, true)" style="height:100px; width: 100px; margin: 3px; float:left;" />
                        <h3 style="margin-top:110px !important;">@StatsProcedures.StatTypesMap[f].FriendlyName</h3>
                        <p><i>@StatsProcedures.StatTypesMap[f].Description:</i> <b>@String.Format("{0:n0}", ach.Achivement.Amount)</b></p>
                        <p>
                            @Html.ActionLink(ach.Player.Player.GetFullName(), "LookAtPlayer", "PvP", new { id = ach.Player.Player.Id }, null)

                        @Ajax.ActionLink("[+]", "PlayerStatsTopOfType", "Settings", new { type = ach.Achivement.AchievementType }, new AjaxOptions { UpdateTargetId = "more_" + f, InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success('" + f + "')", OnFailure = "failure", OnBegin = "waiting" }, new { @class = "attackLink", @id = f })

                    </p>

                    <div id="more_@f">

                    </div>

                </div>
                }

            }
        }
    </div>

    <div id="topTypeList"></div>



</div>



<script>
    function success(panel) {
        //alert(panel);
        var button = $("#" + panel);
        button.parent().parent().css("height", "484px");
        button.replaceWith("<p>------------------</p>");
    }

    function failure() {
        alert("Juderp!  Failed to contact server!");
    }

    function waiting() {

    }
</script>